W naszej serii poradników dla administratorów najczęściej opowiadamy o tym, jak rozwiązać jakiś problem lub skonfigurować usługę związaną z bezpieczeństwem. Tym razem jednak opowiemy Wam, czego zdecydowanie NIE robić. Czy kogokolwiek z Was musimy przekonywać, że nie należy korzystać z usługi telnet? Chyba nie, a jednak… W polskiej sieci można trafić na liczne serwery usługi rsyncd, która, łagodnie rzecz ujmując, wcale bezpieczna nie jest. Co więcej, nie jest prosto ją chociażby odrobinę zabezpieczyć. Jak wspominaliśmy w naszych webinarach, błędy konfiguracyjne różnych usług sieciowych mogą stwarzać poważne problemy bezpieczeństwa. Niestety wielu administratorów do dnia dzisiejszego wykorzystuje usługę rsyncd do synchronizacji plików przez sieć, głównie do wykonywania kopii zapasowych. Omawialiśmy i opisywaliśmy różne podejścia do tworzenia bezpiecznych kopii zapasowych i zdecydowanie rsyncd nie jest jednym z narzędzi, które do tego celu rekomendujemy.  We współpracy z firmą ArubaCloud pokazaliśmy Wam, jak postawić swój serwer backupów, jak skonfigurować własny serwer VPN i podłączyć do niego komputer, telefony komórkowe oraz domowy ruter a także jak schować się przed cenzurą sieci i jak zacząć serwer zabezpieczać, jak postawić swój własny zdalny pulpit, swój serwer WWW, jak monitorować zmiany w plikach, jak zablokować reklamy na komórce, jak skonfigurować bezpieczną kopię zapasową, jak zabezpieczyć logowanie do serwera za pomocą jednorazowych tokenów lub za pomocą klucza Yubikey a także jak monitorować swoje systemy w dwóch odsłonach oraz jak postawić swój serwer Jabbera. Jeśli nie macie jeszcze swojego własnego serwera, to jest to dobra okazja by się w taki wyposażyć. Aruba oferuje dwa miesiące korzystania ze swojego podstawowego serwera gratis – a po zakończeniu promocji będzie on Was kosztował zaledwie 4 złote miesięcznie. Co więcej Aruba ma już serwerownię w Warszawie. Instrukcję jak krok po kroku skorzystać z promocji i uruchomić swój serwer znajdziecie w tym artykule. Jeśli macie już swój serwer – to zapraszamy do lektury kolejnych akapitów. Na początek przyda się kilka słów wyjaśnienia. Rsync to narzędzie dostępne z wiersza poleceń w którym wszelkie parametry przekazywane są jako argumenty wywołania programu. Z kolei rsyncd nasłuchuje na określonym porcie jako usługa sieciowa. Usługa ta bazuje na pliku konfiguracyjnym (zazwyczaj /etc/rsyncd.conf). Plik konfiguracyjny składa się z modułów i parametrów. Moduł rozpoczyna się od nazwy modułu w nawiasach kwadratowych. Moduły zawierają parametry: „nazwa = wartość”. Zanim przejdziemy do dalszej części artykułu, pamiętajmy o tym, że: Aby zrozumieć, dlaczego używanie rsyncd to zły pomysł, omówmy działanie tej usługi. Zacznijmy od podstawowych ustawień w pliku rsyncd.conf. Poniżej znajdziecie opis najważniejszych ustawień, opracowany na podstawie dokumentacji rsyncd.conf(5): Globalna konfiguracja usługi: Konfiguracja modułu: Po parametrach globalnych należy zdefiniować liczbę modułów, a każdy moduł eksportuje drzewo katalogów jako nazwę symboliczną. Moduły są eksportowane przez określenie nazwy modułu w nawiasach kwadratowych [moduł], a następnie określane są parametry dla tego modułu. Standardowo nie ma wartości domyślnej dla parametru „secrets file”. Możesz (ale nie musisz) określić dowolny plik (np. /etc/rsyncd.secrets) w którym będą zdefiniowane niebezpieczne pary zapisane plaintextem. Plik /etc/rsyncd.secrets wyglądałby tak: Analogia nowoczesności i bezpieczeństwa Jeśli opis dostępnych opcji Was jeszcze nie przekonał, że używanie rsyncd to nie jest najlepszy pomysł, to zobaczcie, jak wygląda uwierzytelnienie użytkownika. Protokół uwierzytelniania używany w rsyncd to skomplikowany 128-bitowy MD4 oparty na challenge-response. Jest to jednak dość słaba ochrona, więc jeśli chcecie naprawdę najwyższej jakości zabezpieczenia, zalecamy uruchomienie rsyncd przez SSH. Co prawda przyszła wersja rsyncd podobno będzie wykorzystywała bezpieczniejsze funkcje skrótu, to dzisiaj nie ma zbyt wielkiego wyboru. Zauważcie też, że usługa rsyncd nie zapewnia obecnie żadnego szyfrowania danych przesyłanych przez sieć. Dostępne jest tylko uwierzytelnianie. Naprawdę lepiej skorzystać z innych protokołów do przesyłania danych. Przyszłe wersje rsyncd podobno będą mogły obsługiwać protokół SSL w celu lepszego uwierzytelniania i szyfrowania, ale dzisiaj taka funkcja nie jest dostępna. Testowanie bezpieczeństwa usługi rsyncd nie jest zbyt skomplikowane. Nmap posiada skrypt „rsync-list-modules”, którego zadaniem jest pozyskanie wszystkich dostępnych modułów w usłudze rsyncd: W repozytorium nmap znajduje się jeszcze jeden skrypt o nazwie rsync-brute, który wykonuje atak brute-force: Mamy nadzieję, że nie synchronizujecie jakichkolwiek danych za pomocą usługi rsyncd. Jeśli jest inaczej, poważnie rozważcie zmianę sposobu synchronizacji danych. Jest pełno lepszych opcji, np. Przykład transferu danych za pomocą polecenia (polecenia, nie usługi) rsync przez protokół SSH: Dla Waszego bezpieczeństwa nie opublikujemy przykładowego bezpiecznego pliku konfiguracyjnego – przyjmijmy, że takowy nie istnieje. Jeśli uważacie, że da się bezpiecznie używać rsyncd, to czekamy na Wasze odpowiedzi w komentarzach. Osoba, która zdaniem komisji konkursowej poda najlepszy argument dlaczego należałoby korzystać z usługi rsyncd w 2017 roku otrzyma firmową koszulkę z3s.  Dla pełnej przejrzystości – nie zachęcamy do korzystania z usługi rsyncd w sieciach publicznych. Za przygotowanie oraz opublikowanie powyższego artykułu otrzymujemy wynagrodzenie.,redakcjaW naszej serii poradników dla administratorów najczęściej opowiadamy o tym, jak rozwiązać jakiś problem lub skonfigurować usługę związaną z bezpieczeństwem. Tym razem jednak opowiemy Wam, czego zdecydowanie NIE robić. Czy kogokolwiek z Was musimy przekonywać, że nie należy korzystać z usługi telnet? Chyba nie, a jednak… W polskiej sieci można trafić na liczne serwery usługi rsyncd, która, łagodnie rzecz ujmując, wcale bezpieczna nie jest. Co więcej, nie jest prosto ją chociażby odrobinę zabezpieczyć. Jak wspominaliśmy w naszych webinarach, błędy konfiguracyjne różnych usług sieciowych mogą stwarzać poważne problemy bezpieczeństwa. Niestety wielu administratorów do dnia dzisiejszego wykorzystuje usługę rsyncd do synchronizacji plików przez sieć, głównie do wykonywania kopii zapasowych. Omawialiśmy i opisywaliśmy różne podejścia do tworzenia bezpiecznych kopii zapasowych i zdecydowanie rsyncd nie jest jednym z narzędzi, które do tego celu rekomendujemy.  We współpracy z firmą ArubaCloud pokazaliśmy Wam, jak postawić swój serwer backupów, jak skonfigurować własny serwer VPN i podłączyć do niego komputer, telefony komórkowe oraz domowy ruter a także jak schować się przed cenzurą sieci i jak zacząć serwer zabezpieczać, jak postawić swój własny zdalny pulpit, swój serwer WWW, jak monitorować zmiany w plikach, jak zablokować reklamy na komórce, jak skonfigurować bezpieczną kopię zapasową, jak zabezpieczyć logowanie do serwera za pomocą jednorazowych tokenów lub za pomocą klucza Yubikey a także jak monitorować swoje systemy w dwóch odsłonach oraz jak postawić swój serwer Jabbera. Jeśli nie macie jeszcze swojego własnego serwera, to jest to dobra okazja by się w taki wyposażyć. Aruba oferuje dwa miesiące korzystania ze swojego podstawowego serwera gratis – a po zakończeniu promocji będzie on Was kosztował zaledwie 4 złote miesięcznie. Co więcej Aruba ma już serwerownię w Warszawie. Instrukcję jak krok po kroku skorzystać z promocji i uruchomić swój serwer znajdziecie w tym artykule. Jeśli macie już swój serwer – to zapraszamy do lektury kolejnych akapitów. Na początek przyda się kilka słów wyjaśnienia. Rsync to narzędzie dostępne z wiersza poleceń w którym wszelkie parametry przekazywane są jako argumenty wywołania programu. Z kolei rsyncd nasłuchuje na określonym porcie jako usługa sieciowa. Usługa ta bazuje na pliku konfiguracyjnym (zazwyczaj /etc/rsyncd.conf). Plik konfiguracyjny składa się z modułów i parametrów. Moduł rozpoczyna się od nazwy modułu w nawiasach kwadratowych. Moduły zawierają parametry: „nazwa = wartość”. Zanim przejdziemy do dalszej części artykułu, pamiętajmy o tym, że: Aby zrozumieć, dlaczego używanie rsyncd to zły pomysł, omówmy działanie tej usługi. Zacznijmy od podstawowych ustawień w pliku rsyncd.conf. Poniżej znajdziecie opis najważniejszych ustawień, opracowany na podstawie dokumentacji rsyncd.conf(5): Globalna konfiguracja usługi: Konfiguracja modułu: Po parametrach globalnych należy zdefiniować liczbę modułów, a każdy moduł eksportuje drzewo katalogów jako nazwę symboliczną. Moduły są eksportowane przez określenie nazwy modułu w nawiasach kwadratowych [moduł], a następnie określane są parametry dla tego modułu. Standardowo nie ma wartości domyślnej dla parametru „secrets file”. Możesz (ale nie musisz) określić dowolny plik (np. /etc/rsyncd.secrets) w którym będą zdefiniowane niebezpieczne pary zapisane plaintextem. Plik /etc/rsyncd.secrets wyglądałby tak: Analogia nowoczesności i bezpieczeństwa Jeśli opis dostępnych opcji Was jeszcze nie przekonał, że używanie rsyncd to nie jest najlepszy pomysł, to zobaczcie, jak wygląda uwierzytelnienie użytkownika. Protokół uwierzytelniania używany w rsyncd to skomplikowany 128-bitowy MD4 oparty na challenge-response. Jest to jednak dość słaba ochrona, więc jeśli chcecie naprawdę najwyższej jakości zabezpieczenia, zalecamy uruchomienie rsyncd przez SSH. Co prawda przyszła wersja rsyncd podobno będzie wykorzystywała bezpieczniejsze funkcje skrótu, to dzisiaj nie ma zbyt wielkiego wyboru. Zauważcie też, że usługa rsyncd nie zapewnia obecnie żadnego szyfrowania danych przesyłanych przez sieć. Dostępne jest tylko uwierzytelnianie. Naprawdę lepiej skorzystać z innych protokołów do przesyłania danych. Przyszłe wersje rsyncd podobno będą mogły obsługiwać protokół SSL w celu lepszego uwierzytelniania i szyfrowania, ale dzisiaj taka funkcja nie jest dostępna. Testowanie bezpieczeństwa usługi rsyncd nie jest zbyt skomplikowane. Nmap posiada skrypt „rsync-list-modules”, którego zadaniem jest pozyskanie wszystkich dostępnych modułów w usłudze rsyncd: W repozytorium nmap znajduje się jeszcze jeden skrypt o nazwie rsync-brute, który wykonuje atak brute-force: Mamy nadzieję, że nie synchronizujecie jakichkolwiek danych za pomocą usługi rsyncd. Jeśli jest inaczej, poważnie rozważcie zmianę sposobu synchronizacji danych. Jest pełno lepszych opcji, np. Przykład transferu danych za pomocą polecenia (polecenia, nie usługi) rsync przez protokół SSH: Dla Waszego bezpieczeństwa nie opublikujemy przykładowego bezpiecznego pliku konfiguracyjnego – przyjmijmy, że takowy nie istnieje. Jeśli uważacie, że da się bezpiecznie używać rsyncd, to czekamy na Wasze odpowiedzi w komentarzach. Osoba, która zdaniem komisji konkursowej poda najlepszy argument dlaczego należałoby korzystać z usługi rsyncd w 2017 roku otrzyma firmową koszulkę z3s.  Dla pełnej przejrzystości – nie zachęcamy do korzystania z usługi rsyncd w sieciach publicznych. Za przygotowanie oraz opublikowanie powyższego artykułu otrzymujemy wynagrodzenie.,redakcjaW naszej serii poradników dla administratorów najczęściej opowiadamy o tym, jak rozwiązać jakiś problem lub skonfigurować usługę związaną z bezpieczeństwem. Tym razem jednak opowiemy Wam, czego zdecydowanie NIE robić. Czy kogokolwiek z Was musimy przekonywać, że nie należy korzystać z usługi telnet? Chyba nie, a jednak… W polskiej sieci można trafić na liczne serwery usługi rsyncd, która, łagodnie rzecz ujmując, wcale bezpieczna nie jest. Co więcej, nie jest prosto ją chociażby odrobinę zabezpieczyć. Jak wspominaliśmy w naszych webinarach, błędy konfiguracyjne różnych usług sieciowych mogą stwarzać poważne problemy bezpieczeństwa. Niestety wielu administratorów do dnia dzisiejszego wykorzystuje usługę rsyncd do synchronizacji plików przez sieć, głównie do wykonywania kopii zapasowych. Omawialiśmy i opisywaliśmy różne podejścia do tworzenia bezpiecznych kopii zapasowych i zdecydowanie rsyncd nie jest jednym z narzędzi, które do tego celu rekomendujemy.  We współpracy z firmą ArubaCloud pokazaliśmy Wam, jak postawić swój serwer backupów, jak skonfigurować własny serwer VPN i podłączyć do niego komputer, telefony komórkowe oraz domowy ruter a także jak schować się przed cenzurą sieci i jak zacząć serwer zabezpieczać, jak postawić swój własny zdalny pulpit, swój serwer WWW, jak monitorować zmiany w plikach, jak zablokować reklamy na komórce, jak skonfigurować bezpieczną kopię zapasową, jak zabezpieczyć logowanie do serwera za pomocą jednorazowych tokenów lub za pomocą klucza Yubikey a także jak monitorować swoje systemy w dwóch odsłonach oraz jak postawić swój serwer Jabbera. Jeśli nie macie jeszcze swojego własnego serwera, to jest to dobra okazja by się w taki wyposażyć. Aruba oferuje dwa miesiące korzystania ze swojego podstawowego serwera gratis – a po zakończeniu promocji będzie on Was kosztował zaledwie 4 złote miesięcznie. Co więcej Aruba ma już serwerownię w Warszawie. Instrukcję jak krok po kroku skorzystać z promocji i uruchomić swój serwer znajdziecie w tym artykule. Jeśli macie już swój serwer – to zapraszamy do lektury kolejnych akapitów. Na początek przyda się kilka słów wyjaśnienia. Rsync to narzędzie dostępne z wiersza poleceń w którym wszelkie parametry przekazywane są jako argumenty wywołania programu. Z kolei rsyncd nasłuchuje na określonym porcie jako usługa sieciowa. Usługa ta bazuje na pliku konfiguracyjnym (zazwyczaj /etc/rsyncd.conf). Plik konfiguracyjny składa się z modułów i parametrów. Moduł rozpoczyna się od nazwy modułu w nawiasach kwadratowych. Moduły zawierają parametry: „nazwa = wartość”. Zanim przejdziemy do dalszej części artykułu, pamiętajmy o tym, że: Aby zrozumieć, dlaczego używanie rsyncd to zły pomysł, omówmy działanie tej usługi. Zacznijmy od podstawowych ustawień w pliku rsyncd.conf. Poniżej znajdziecie opis najważniejszych ustawień, opracowany na podstawie dokumentacji rsyncd.conf(5): Globalna konfiguracja usługi: Konfiguracja modułu: Po parametrach globalnych należy zdefiniować liczbę modułów, a każdy moduł eksportuje drzewo katalogów jako nazwę symboliczną. Moduły są eksportowane przez określenie nazwy modułu w nawiasach kwadratowych [moduł], a następnie określane są parametry dla tego modułu. Standardowo nie ma wartości domyślnej dla parametru „secrets file”. Możesz (ale nie musisz) określić dowolny plik (np. /etc/rsyncd.secrets) w którym będą zdefiniowane niebezpieczne pary zapisane plaintextem. Plik /etc/rsyncd.secrets wyglądałby tak: Analogia nowoczesności i bezpieczeństwa Jeśli opis dostępnych opcji Was jeszcze nie przekonał, że używanie rsyncd to nie jest najlepszy pomysł, to zobaczcie, jak wygląda uwierzytelnienie użytkownika. Protokół uwierzytelniania używany w rsyncd to skomplikowany 128-bitowy MD4 oparty na challenge-response. Jest to jednak dość słaba ochrona, więc jeśli chcecie naprawdę najwyższej jakości zabezpieczenia, zalecamy uruchomienie rsyncd przez SSH. Co prawda przyszła wersja rsyncd podobno będzie wykorzystywała bezpieczniejsze funkcje skrótu, to dzisiaj nie ma zbyt wielkiego wyboru. Zauważcie też, że usługa rsyncd nie zapewnia obecnie żadnego szyfrowania danych przesyłanych przez sieć. Dostępne jest tylko uwierzytelnianie. Naprawdę lepiej skorzystać z innych protokołów do przesyłania danych. Przyszłe wersje rsyncd podobno będą mogły obsługiwać protokół SSL w celu lepszego uwierzytelniania i szyfrowania, ale dzisiaj taka funkcja nie jest dostępna. Testowanie bezpieczeństwa usługi rsyncd nie jest zbyt skomplikowane. Nmap posiada skrypt „rsync-list-modules”, którego zadaniem jest pozyskanie wszystkich dostępnych modułów w usłudze rsyncd: W repozytorium nmap znajduje się jeszcze jeden skrypt o nazwie rsync-brute, który wykonuje atak brute-force: Mamy nadzieję, że nie synchronizujecie jakichkolwiek danych za pomocą usługi rsyncd. Jeśli jest inaczej, poważnie rozważcie zmianę sposobu synchronizacji danych. Jest pełno lepszych opcji, np. Przykład transferu danych za pomocą polecenia (polecenia, nie usługi) rsync przez protokół SSH: Dla Waszego bezpieczeństwa nie opublikujemy przykładowego bezpiecznego pliku konfiguracyjnego – przyjmijmy, że takowy nie istnieje. Jeśli uważacie, że da się bezpiecznie używać rsyncd, to czekamy na Wasze odpowiedzi w komentarzach. Osoba, która zdaniem komisji konkursowej poda najlepszy argument dlaczego należałoby korzystać z usługi rsyncd w 2017 roku otrzyma firmową koszulkę z3s.  Dla pełnej przejrzystości – nie zachęcamy do korzystania z usługi rsyncd w sieciach publicznych. Za przygotowanie oraz opublikowanie powyższego artykułu otrzymujemy wynagrodzenie.,redakcja