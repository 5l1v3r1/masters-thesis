Ilu z Was sprawdza kod źródłowy nowej wersji wtyczki WordPressa przed uruchomieniem aktualizacji? Nie spodziewamy się zobaczyć zbyt wielu rąk w górze. Ostatnie dni pokazują, że możemy mieć dzięki temu do czynienia z realnym ryzykiem infekcji. Wtyczka Social Media Widget, pomagająca umieścić ikonki i linki do serwisów społecznościowych, należy do 20 najpopularniejszych rozszerzeń WordPressa. Została do tej pory pobrana z jego repozytorium ponad milion razy, lecz należy także do nielicznego grona wtyczek, które ze względów bezpieczeństwa zostały z niego usunięte (choć została później przywrócona). Jakie zagrożenie stanowiła ona dla użytkowników i jak doszło do infekcji? Wtyczkę stworzył w maju 2010 i długo utrzymywał Brian Freytag, który w styczniu tego roku postanowił ją sprzedać. Kupcem okazał się Brendan Sheehan, właściciel firmy Blink Web Effects, zajmującej się internetowym marketingiem oraz SEO. Początkowo Sheehan sam wprowadzał zmiany do wtyczki, jednak, nie znając się zbyt dobrze na programowaniu, postanowił zlecić większe zmiany zewnętrznej firmie. To zlecenie okazało się leżeć u źródła problemów wtyczki. Pod koniec marca w repozytorium wtyczek WordPressa pojawiła się aktualizacja wtyczki z wersji 3.3 do 4.0. Dopiero po ok. 10 dniach jej złośliwa funkcjonalność została aktywowana. 9 kwietnia firma Sucuri, specjalizująca się w bezpieczeństwie CMS-ów, zauważyła, że wtyczka w nowej wersji nie zachowuje się standardowo. Na stronach, które się nią posługiwały, zaczęły pokazywać się linki SEO niewiadomego pochodzenia. Za to niestandardowe zachowanie odpowiadał nowy fragment kodu: Kod ten pobierał z zewnętrznego serwera i wstrzykiwał do stron WordPressa reklamy. W przypadku uruchomienia w przeglądarce odwiedzających zarażona witrynę pojawiał się kod Jak skuteczny okazał się podstęp? Pokazuje to dobrze wykres z serwisu ahrefs.com. Popularność linków do paydaypam.co.uk W ciągu 2 dni serwis „zdobył” ponad pół miliona linków zwrotnych z 17 tysięcy domen. Wtyczka została usunięta z repozytorium WordPressa a firma nią zarządzająca zaczęła szukać winnych zaistniałej sytuacji. Jeśli wierzyć ich wyjaśnieniom, za nieautoryzowane zmiany w kodzie odpowiadał zewnętrzny dostawca, który został wynajęty do stworzenia nowego kodu wtyczki. WordPress wyjaśnienia przyjął i wtyczkę w poprawionej wersji przyjął ponownie pod swoje skrzydła. Krótka odpowiedź brzmi „nie da się”. Można oczywiście przestać korzystać z jakichkolwiek wtyczek, ale instalacje WordPressa, które sobie bez nich radzą, można policzyć na palcach jednej ręki. Przenoszenie zweryfikowanego kodu do głównych plików WordPressa tez mija się z celem (problem zacznie się przy aktualizacji), a tworzenie własnych wtyczek (lub wnikliwe czytanie kodu cudzych) jest nad wyraz czasochłonne. To co można zrobić – i co po zakończeniu lektury tego artykułu każdy administrator WordPressa zrobić powinien – to przejrzeć używane przez siebie wtyczki i wyłączyć, a najlepiej usunąć te, z których nie korzysta. Potem powtórzyć proces jeszcze raz, usuwając wtyczki, z których korzysta, ale w rzeczywistości ich nie potrzebuje. W ten sposób można znacząco zmniejszyć prawdopodobieństwo zostania ofiarą wydarzeń podobnych do opisanych powyżej. Oprócz wtyczek WordPressa, warto także poddać podobnej analizie wszystkie skrypty wczytywane z zewnętrznych serwisów (by nie wywinąć czytelnikom numeru à la Niebezpiecznik). Trzeba tez nadmienić, że „atak” poprzez umieszczenie w serwisach linków SEO to dość łagodny przypadek. Pod wstrzykiwanym adresem mógł zawsze czaić się Blackhole Exploit Pack lub jedno z wielu innych potencjalnych zagrożeń.,Adam