W majowym wydaniu manuali Intela można znaleźć informacje o nowym zabezpieczeniu, które zostanie wprowadzone w nowych procesorach z rodziny x86. Mowa o SMEP aka Supervisor Mode Execution Protection. Autorem poniższego artykułu jest Gynvael Coldwind SMEP Sprawa jest dość prosta: duża część exploitów umożliwiających local privilege escalation umieszcza shellcode w pamięci user-mode (tak zazwyczaj jest najwygodniej), a następnie exploitując daną podatność w kernelu/driverach wykonuje skok do owego shellcode’u. I tutaj wchodzi SMEP, który w przypadku wykrycia próby wykonania kodu znajdującego się w pamięci dostępnej z user-mode (ring3) z prawami kernela (ring0) rzuci wyjątek (a więc kod się nie wykona). Ciekawe jest to, że dokładnie takie rozwiązanie zostało zaproponowane przez Joannę Rutkowską i Rafała Wojtczuka na konferencji Black Hat 2008 w USA. Zachęcam do rzucenia okiem na post Joanny o SMEP sprzed paru dni. Obejście SMEP Dodatkowo Dan Rosenberg opublikował ciekawego posta omawiającego SMEP w kontekście “Linuxa”. Idąc w ślady Dana razem z j00ru opublikowaliśmy podobnego posta w kontekście systemów z rodziny Windows, wskazując kilka metod obejścia SMEP. SMEP + systemy oparte o jądro Linuxa (by Dan Rosenberg) SMEP + Windows (by Mateusz ‘j00ru’ Jurczyk & Gynvael Coldwind): http://j00ru.vexillium.org/?p=783 http://gynvael.coldwind.pl/?id=394 Podsumowując: o ile SMEP trochę utrudni tworzenie exploitów typu priv. escal., to istnieje kilka dobrze znanych i kilka mniej znanych metod które i tak pozwolą na wykorzystywanie podatności w kernelach. Niemniej jednak jest to zawsze krok do przodu. Autorem tego artykułu jest Gynvael Coldwind ,Mr. Niebezpieczny