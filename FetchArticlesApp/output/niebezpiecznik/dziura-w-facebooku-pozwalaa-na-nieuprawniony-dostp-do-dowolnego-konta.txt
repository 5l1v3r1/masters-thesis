Tym razem nie chodzi o zainfekowane złośliwym oprogramowaniem laptopy pracowników Facebooka, ale atak na użytkowników portalu — wystarczyło odwiedzić odpowiednio spreparowaną stronę, aby atakujący uzyskał dostęp do konta ofiary na Facebooku. Zawinił protokół OAuth. Czym jest OAuth? OAuth w Facebooku jest używany do przydzielania uprawnień dla facebookowych aplikacji. Jeśli użytkownik wyrazi zgodę podczas instalacji aplikacji na Facebooku, aplikacja uzyskuje dostęp do konta użytkownika bazując na tokenach OAuth. Tokeny są używane po to, aby właściciele aplikacji nie poznał prawdziwego hasła do konta. Token jest jednak równoważny hasłu (pozwala na dostęp do odpowiednich części konta użytkownika). Błąd, który Nir Goldshlager odkrył w facebookowej implementacji OAuthu umożliwił mu przejęcie pełnej kontroli nad dowolnym kontem na Facebooku — ofiara musiała tylko wejść na odpowiednio spreparowaną stronę WWW. Jak wykraść token OAuth? Atak polegał na znalezieniu sposobu wstrzyknięcia do OAuthowego URL-a dodatkowych parametrów i ominięciu potrzeby pokazania ofierze przycisku “Allow” akceptującego podstawione uprawnienia. Przykładowy URL przydzielający uprawnienia wygląda tak: https://www.facebook.com/dialog/oauth/?app_id=YOUR_APP_ID&next=YOUR_REDIRECT_URL&state=YOUR_STATE_VALUE &scope=COMMA_SEPARATED_LIST_OF_PERMISSION_NAMES Każda aplikacja na Facebooku ma inne app_id, a kolejny parametr next i redirect_uri akceptuje tylko wartości odpowiadające domenie należącej do aplikacji wskazanej przez app_id. Podanie innej domeny kończy się błędem: Przekierowanie ofiary na naszą domenę pozwalałoby na kradzież tokenu (jest wysyłany metodą GET) — trzeba więc wpaść na to, jak ominąć restrykcję nałożone na redirect_uri. Nir odkrył, że Facebook pozwalał na przekierowanie na subdomeny …facebookową. O ile xxx.facebook.com działało, to xxx.facebook.com/foo/bar.php już nie. Ale i na to Nir znalazł sposób — wprowadzenie #! do URL-a, a dokładnie %23~! lub %23%09! — te działają na każdej przeglądarce. Ale przekierowanie ofiary na dowolną stronę Facebooka dalej nie pozwala na kradzież tokenu. Dlatego Nir napisał swoją aplikację Facebookową (touch.facebook.com/apps/testestestte), która jedyne co robiła, to przekierowywała ofiarę na inną domenę (spoza Facebooka). https://www.facebook.com/connect/uiserver.php?app_id=2389801228&next=https%3A%2F%2Ftouch.facebook.com%2F%23~! %2Fapps%2Ftestestestte%2F&display=page&fbconnect=1 &method=permissions.request&response_type=token Docelowa domena logowała otrzymywane tokeny do pliku po stronie serwera. Ale żeby atak mógł dojść do skutku, użytkownik musiał jeszcze kliknąć na przycisk “Allow” na oknie z uprawnieniami aplikacji. Obejście przycisku zgody na instalacje uprawnień Nir wpadł na pomsł, żeby skorzystać z id aplikacji Facebookowej — Messengera. Okazało się, że ma on bardzo szerokie uprawnienia (łącznie z odczytem poczty) i użytkownik wcale nie musi akceptować tej aplikacji …oraz token dla Facebook Messengera nie jest ograniczony czasowo (zmienia się tylko po zmianie hasła). Wideo z ataku poniżej: Nir zgłosił błąd do Facebooka, a Facebook już go poprawił. ,vi.curry