Rosyjska firma ONsec opublikowała ciekawy raport dotyczący tego, jak PHP na Windowsie traktuje nazwy plików. Badanie pokazuje, że wszyscy którzy hostują swoje webaplikacje napisane w PHP na Windows, powinni jeszcze raz przyjrzeć się wszelkim regexpom i regułkom na IDS-ach… Nazwy plików a PHP na Windows Do stworzenia raportu badaczy zainspirował fakt, że w Windows interpreter PHP może z sukcesem odwołać się do pliku na 4 poniższe sposoby: example.phP example.php example.ph> example.ph< Z przeprowadzonych przez ONsec testów wynika, że za błąd odpowiedzialna jest funkcja WinAPI FindFirstFile(). Badacze zauważyli, że znak > zastępowany jest tak naprawdę przez ? a < przez * i dodatkowo “ zastępowany jest przez .. Co ciekawe, ten bug jest znany Microsoftowi od roku 2007. Do czego można to wykorzystać? Pozwólcie, że konsekwencje takiego zachowania funkcji FindFirstFile() pokażemy na przykładach: include(‘shell<‘) < zamieniane jest na *, i dowolny plik pasujący do maski shell* jest załączany include(‘shell.p>p’) > zamieniane jest na ? i dowolny plik pasujący do maski shell.p?p jest załaczany include(‘shell”.php’) ” zamieniany jest na . Co ciekawe, badanie wykazało, że fopen(“htaccess”); odpowiada fopen(“.htaccess”) a także, korzystając z zaprezentowanych powyżej tricków, jest równoważny fopen(“h>>”). Pełen raport przypomina również, że za pomocą include (‘\\server\shell.php’); można obejść blokadę allow_url_fopen=off. Testów dokonano na PHP 4.9, PHP 5.2, PHP 5.3, PHP 6.0. oraz systemach Windows XP SP3 x32, Windows XP SP2 x64, Windows 7, Windows Server 2003. Jak podkreślają pracownicy Onsecu, najprawdopodobniej wszystkie windowsy i inne wersje interpretera PHP też będą podatne na ten bug. Jeśli korzystasz z PHP na Windows powinieneś odpowiednio dostosować regułki IDS/IPS-ów oraz ew. regexpy w twojej webaplikacji. Jeśli jesteś zainteresowany tematyką bezpieczeństwa webaplikacji, zapraszamy na nasze szkolenie ,Piotr Konieczny