Była północ, kiedy nagle siedzącego przed komputerem Zbyszka oślepił blask bijący od strony okna. Zaciekawiony podszedł bliżej i dyskretnie wyjrzał na zewnątrz. Dostrzegł sąsiada z bloku naprzeciwko, który właśnie w tej chwili testował swoje nowe świąteczne oświetlenie. Zbyszek nienawidził świąt, a jednym z powodów był między innymi wspomniany wyżej człowiek. Przez niego musiał przyzwyczaić się do siedzenia przy zasuniętych żaluzjach, a zasunięte żaluzje sprawiały, że czuł się w pewien sposób ograniczany, nie mówiąc już o tym, że wykonane z metalu znacznie obniżały transfer pożyczanego od sąsiada sygnału sieci Wi-Fi, którą Zbyszek wykorzystywał do pobierania z torrentów …legalnych dystrybucji Linuksa. Nie mogąc uwierzyć, że kolejny rok minął mu tak szybko, westchnął i uruchomił radioodbiornik stojący na biurku. Z głośników rozległo się: — „A więc zaczęło się na dobre…” — pomyślał, kierując swoje kroki do kuchni. Jakby na domiar złego, z telewizora popłynęła reklama kolejnego symbolu świąt: Do kompletu zwiastunów zbliżających się wielkimi krokami świąt, brakowało jeszcze tylko jednego – e-maili od znajomych, zawierających świąteczne życzenia. Kiedy uświadomił sobie, że lada chwila zacznie otrzymywać żenująco płytkie, skopiowane z internetu świąteczne wierszyki i pozdrowienia, zrobiło mu się słabo. Zawsze wtedy czuł się szantażowany emocjonalnie: z obrzydzeniem odpisać „Dzięki, wzajemnie!”, czy olać i wyjść na gbura. Uznał, że najlepszą metodą obrony w tym wypadku będzie atak! Automatyzacja wypisywania świątecznych kartek W przeciwieństwie do swoich znajomych, Zbyszek był zbyt leniwy żeby wysyłać życzenia (nawet skopiowane z sieci) ręcznie. Przypomniał sobie o swoim koledze pracującym w korporacji w roli Quality Assurance Engineer. Ten, w ramach ciekawostki pokazał mu, jak automatyzuje gry przeglądarkowe za pomocą narzędzia o nazwie Selenium IDE. Był to prosty plugin do przeglądarki Firefox, który pozwalał nagrywać, a następnie odtwarzać akcje użytkownika. Program nie zachwycał oprawą graficzną –- ale przecież „liczy się wnętrze…” pomyślał Zbyszek i rozpoczął od znalezienia najbardziej żenujących życzeń świątecznych w sieci. Następnie stworzył listę adresów e-mail swoich znajomych. Ta część jego planu wymagała niestety trochę wysiłku, ale stracony czas miał się zwrócić podczas wysyłki życzeń noworocznych i świąt wielkanocnych. W końcu skrypt automatyczny będzie bezobsługowy i możliwy do wielokrotnego wykorzystania przy każdej okazji — wystarczy jedynie zmienić szablon treści życzeń! Aby dodać szablon życzenia w Selenium, należy jako komendy użyć storeEval, a w polu “target” wpisać treść życzeń i nazwać zmienną np. “życzenia” (w polu “value”). Teraz wystarczyło znaleźć darmową bramkę do wysyłania wiadomości! Najlepiej taką bez zabezpieczenia CAPTCHA, bo choć istnieją sprawdzone metody na obejście tego mechanizmu, to o tej godzinie nie czuł się już na siłach, aby zmierzyć się z tematem. Po znalezieniu strony, ale przed wejściem na nią, Zbyszek nacisnął w Selenium przycisk “record”. Dzięki czemu narzędzie automatycznie dodało komendę odpowiedzialną za wejście na żądany adres URL, kiedy strona z bramką otwarła się w przeglądarce. „Prostota i skuteczność – dokładnie czegoś takiego potrzebowałem!” — pomyślał Zbyszek widząc najlepszą na świecie (bo darmową) bramkę mailową. Dalsze kroki wymagały jednak od niego większego zaangażowania, na szczęście, z Selenium poradzi sobie każdy, nawet średnio rozgarnięty Script Kidd, więc i Zbyszek dał radę. Nacisnął przycisk „Select”, a następnie w przeglądarce kliknął w pole formularza, które planował zautomatyzować. Jako komendę wybrał „Click”, a do parametru Value wpisał swój adres email. Pola adresat i treść wiadomości zautomatyzował w ten sam sposób. Na końcu, pozostało tylko przepisać ze znalezionego w Internecie przykładu kilka kroków, pozwalających na automatyczne zapętlenie serii zapisanych komend. Zbyszkowi zależało w końcu na tym, aby wszystkie kroki zostały wykonane dla każdego maila z jego listy. Po krótkiej chwili spojrzał z dumą na finalną wersję swojego skryptu: Pozostało wcisnąć tylko przycisk Run i zobaczyć efekty swojej pracy (kliknij w obrazek, bo GIF): Zbyszek był wniebowzięty. W głowie zaczęły mu się pojawiać nowe pomysły na wykorzystanie Selenium. W analogiczny sposób mógł przecież zautomatyzować inne wykonywane przez niego cyklicznie czynności. Wykorzystanie Selenium do ataków na serwisy internetowe Ponieważ robiło się już późno, projekt wykorzystania Selenium do testów bezpieczeństwa postanowił przełożyć na jutro. Po pracy miał już co prawda zaplanowaną lekcję baletu, ale wpadł na pomysł, jak wyrwać się z pracy, aby nikt nie zauważył. Skoro Selenium to narzędzie symulujące ruchy użytkownika, to jutro uruchomi je na swoim firmowym komputerze, dzięki czemu korporacyjny monitoring stacji roboczej nie wykryje, że nie ma go aktualnie przed komputerem. On w tym czasie uda się do toalety i tam odda się swojej nowej pasji. Na twarzy Zbyszka pojawił się złowieszczy uśmiech. Lista pomysłów rosła z każdą minutą. W kolejnych dniach fascynacji Selenium, Zbyszek odkrył, że narzędzie to może zostać wykorzystane także do przeprowadzania bardziej skomplikowanych testów bezpieczeństwa serwisów internetowych. A potem trafił na Selenium Webdriver i dopiero się zaczęło… Zbyszek wiedział już, co musi zrobić, aby nauczyć się w pełni wykorzystać możliwości oferowane przez ten framework — wziąć udział w nowym szkoleniu organizowanym przez Niebezpiecznik pt. “Tester bezpieczeństwa“, skierowanym tylko i wyłącznie do testerów QA. Dzięki poruszanym na szkoleniu zagadnieniom i specjalnie przygotowanym przez niebezpiecznikowych pentesterów ćwiczeniom praktycznym, każdy tester QA możę dowiedzieć się jak podnieść swoje kompetencje i wykorzystać znane mu już narzędzia, takie jak Selenium, FireBug, jMeter do przeprowadzenia podstawowych testów bezpieczeństwa. Ekipa Niebezpiecznika przez ostatnie 10 lat przetestowała setki serwisów internetowych pod kątem bezpieczeństwa. W naszych raportach z testów penetracyjnych regularnie wykazujemy od kilku do kilkuset podatności. Uważamy, że wiele z nich firmy mogłyby z łatwością wykryć już na etapie testowania aplikacji przez wewnętrzne działy testerów (QA), co znacznie ograniczyłoby koszty wytworzenia oprogramowania. Wykorzystywane przez QA narzędzia można łatwo wykorzystać do przeprowadzenia podstawowych testów bezpieczeństwa — niestety, nie każdy tester wie jak. Dlatego właśnie przygotowaliśmy specjalistyczne szkolenie dedykowane pracownikom działów QA. Osoby odpowiedzialne za zapewnianie jakości oprogramowania, dowiedzą się z niego jak niewielkim nakładem dodatkowej pracy, zyskać kompetencje w zakresie wykonywania tak pożądanych obecnie testów bezpieczeństwa. Zainteresowane osoby odsyłamy do pełnej agendy szkolenia. To szkolenie jest jednym z pierwszych działań Niebezpiecznika w obszarze usług dedykowanych kontroli jakości oprogramowania. Niebawem ujawnimy kolejne niespodzianki jakie przygotowaliśmy dla działów QA. PS. Najbliższy termin to tego szkolenia to 23-24 lutego 2017 w Krakowie. Dajcie znać znajomym testerom i do zobaczenia! ,Mateusz PiaszczakByła północ, kiedy nagle siedzącego przed komputerem Zbyszka oślepił blask bijący od strony okna. Zaciekawiony podszedł bliżej i dyskretnie wyjrzał na zewnątrz. Dostrzegł sąsiada z bloku naprzeciwko, który właśnie w tej chwili testował swoje nowe świąteczne oświetlenie. Zbyszek nienawidził świąt, a jednym z powodów był między innymi wspomniany wyżej człowiek. Przez niego musiał przyzwyczaić się do siedzenia przy zasuniętych żaluzjach, a zasunięte żaluzje sprawiały, że czuł się w pewien sposób ograniczany, nie mówiąc już o tym, że wykonane z metalu znacznie obniżały transfer pożyczanego od sąsiada sygnału sieci Wi-Fi, którą Zbyszek wykorzystywał do pobierania z torrentów …legalnych dystrybucji Linuksa. Nie mogąc uwierzyć, że kolejny rok minął mu tak szybko, westchnął i uruchomił radioodbiornik stojący na biurku. Z głośników rozległo się: — „A więc zaczęło się na dobre…” — pomyślał, kierując swoje kroki do kuchni. Jakby na domiar złego, z telewizora popłynęła reklama kolejnego symbolu świąt: Do kompletu zwiastunów zbliżających się wielkimi krokami świąt, brakowało jeszcze tylko jednego – e-maili od znajomych, zawierających świąteczne życzenia. Kiedy uświadomił sobie, że lada chwila zacznie otrzymywać żenująco płytkie, skopiowane z internetu świąteczne wierszyki i pozdrowienia, zrobiło mu się słabo. Zawsze wtedy czuł się szantażowany emocjonalnie: z obrzydzeniem odpisać „Dzięki, wzajemnie!”, czy olać i wyjść na gbura. Uznał, że najlepszą metodą obrony w tym wypadku będzie atak! Automatyzacja wypisywania świątecznych kartek W przeciwieństwie do swoich znajomych, Zbyszek był zbyt leniwy żeby wysyłać życzenia (nawet skopiowane z sieci) ręcznie. Przypomniał sobie o swoim koledze pracującym w korporacji w roli Quality Assurance Engineer. Ten, w ramach ciekawostki pokazał mu, jak automatyzuje gry przeglądarkowe za pomocą narzędzia o nazwie Selenium IDE. Był to prosty plugin do przeglądarki Firefox, który pozwalał nagrywać, a następnie odtwarzać akcje użytkownika. Program nie zachwycał oprawą graficzną –- ale przecież „liczy się wnętrze…” pomyślał Zbyszek i rozpoczął od znalezienia najbardziej żenujących życzeń świątecznych w sieci. Następnie stworzył listę adresów e-mail swoich znajomych. Ta część jego planu wymagała niestety trochę wysiłku, ale stracony czas miał się zwrócić podczas wysyłki życzeń noworocznych i świąt wielkanocnych. W końcu skrypt automatyczny będzie bezobsługowy i możliwy do wielokrotnego wykorzystania przy każdej okazji — wystarczy jedynie zmienić szablon treści życzeń! Aby dodać szablon życzenia w Selenium, należy jako komendy użyć storeEval, a w polu “target” wpisać treść życzeń i nazwać zmienną np. “życzenia” (w polu “value”). Teraz wystarczyło znaleźć darmową bramkę do wysyłania wiadomości! Najlepiej taką bez zabezpieczenia CAPTCHA, bo choć istnieją sprawdzone metody na obejście tego mechanizmu, to o tej godzinie nie czuł się już na siłach, aby zmierzyć się z tematem. Po znalezieniu strony, ale przed wejściem na nią, Zbyszek nacisnął w Selenium przycisk “record”. Dzięki czemu narzędzie automatycznie dodało komendę odpowiedzialną za wejście na żądany adres URL, kiedy strona z bramką otwarła się w przeglądarce. „Prostota i skuteczność – dokładnie czegoś takiego potrzebowałem!” — pomyślał Zbyszek widząc najlepszą na świecie (bo darmową) bramkę mailową. Dalsze kroki wymagały jednak od niego większego zaangażowania, na szczęście, z Selenium poradzi sobie każdy, nawet średnio rozgarnięty Script Kidd, więc i Zbyszek dał radę. Nacisnął przycisk „Select”, a następnie w przeglądarce kliknął w pole formularza, które planował zautomatyzować. Jako komendę wybrał „Click”, a do parametru Value wpisał swój adres email. Pola adresat i treść wiadomości zautomatyzował w ten sam sposób. Na końcu, pozostało tylko przepisać ze znalezionego w Internecie przykładu kilka kroków, pozwalających na automatyczne zapętlenie serii zapisanych komend. Zbyszkowi zależało w końcu na tym, aby wszystkie kroki zostały wykonane dla każdego maila z jego listy. Po krótkiej chwili spojrzał z dumą na finalną wersję swojego skryptu: Pozostało wcisnąć tylko przycisk Run i zobaczyć efekty swojej pracy (kliknij w obrazek, bo GIF): Zbyszek był wniebowzięty. W głowie zaczęły mu się pojawiać nowe pomysły na wykorzystanie Selenium. W analogiczny sposób mógł przecież zautomatyzować inne wykonywane przez niego cyklicznie czynności. Wykorzystanie Selenium do ataków na serwisy internetowe Ponieważ robiło się już późno, projekt wykorzystania Selenium do testów bezpieczeństwa postanowił przełożyć na jutro. Po pracy miał już co prawda zaplanowaną lekcję baletu, ale wpadł na pomysł, jak wyrwać się z pracy, aby nikt nie zauważył. Skoro Selenium to narzędzie symulujące ruchy użytkownika, to jutro uruchomi je na swoim firmowym komputerze, dzięki czemu korporacyjny monitoring stacji roboczej nie wykryje, że nie ma go aktualnie przed komputerem. On w tym czasie uda się do toalety i tam odda się swojej nowej pasji. Na twarzy Zbyszka pojawił się złowieszczy uśmiech. Lista pomysłów rosła z każdą minutą. W kolejnych dniach fascynacji Selenium, Zbyszek odkrył, że narzędzie to może zostać wykorzystane także do przeprowadzania bardziej skomplikowanych testów bezpieczeństwa serwisów internetowych. A potem trafił na Selenium Webdriver i dopiero się zaczęło… Zbyszek wiedział już, co musi zrobić, aby nauczyć się w pełni wykorzystać możliwości oferowane przez ten framework — wziąć udział w nowym szkoleniu organizowanym przez Niebezpiecznik pt. “Tester bezpieczeństwa“, skierowanym tylko i wyłącznie do testerów QA. Dzięki poruszanym na szkoleniu zagadnieniom i specjalnie przygotowanym przez niebezpiecznikowych pentesterów ćwiczeniom praktycznym, każdy tester QA możę dowiedzieć się jak podnieść swoje kompetencje i wykorzystać znane mu już narzędzia, takie jak Selenium, FireBug, jMeter do przeprowadzenia podstawowych testów bezpieczeństwa. Ekipa Niebezpiecznika przez ostatnie 10 lat przetestowała setki serwisów internetowych pod kątem bezpieczeństwa. W naszych raportach z testów penetracyjnych regularnie wykazujemy od kilku do kilkuset podatności. Uważamy, że wiele z nich firmy mogłyby z łatwością wykryć już na etapie testowania aplikacji przez wewnętrzne działy testerów (QA), co znacznie ograniczyłoby koszty wytworzenia oprogramowania. Wykorzystywane przez QA narzędzia można łatwo wykorzystać do przeprowadzenia podstawowych testów bezpieczeństwa — niestety, nie każdy tester wie jak. Dlatego właśnie przygotowaliśmy specjalistyczne szkolenie dedykowane pracownikom działów QA. Osoby odpowiedzialne za zapewnianie jakości oprogramowania, dowiedzą się z niego jak niewielkim nakładem dodatkowej pracy, zyskać kompetencje w zakresie wykonywania tak pożądanych obecnie testów bezpieczeństwa. Zainteresowane osoby odsyłamy do pełnej agendy szkolenia. To szkolenie jest jednym z pierwszych działań Niebezpiecznika w obszarze usług dedykowanych kontroli jakości oprogramowania. Niebawem ujawnimy kolejne niespodzianki jakie przygotowaliśmy dla działów QA. PS. Najbliższy termin to tego szkolenia to 23-24 lutego 2017 w Krakowie. Dajcie znać znajomym testerom i do zobaczenia! ,Mateusz PiaszczakByła północ, kiedy nagle siedzącego przed komputerem Zbyszka oślepił blask bijący od strony okna. Zaciekawiony podszedł bliżej i dyskretnie wyjrzał na zewnątrz. Dostrzegł sąsiada z bloku naprzeciwko, który właśnie w tej chwili testował swoje nowe świąteczne oświetlenie. Zbyszek nienawidził świąt, a jednym z powodów był między innymi wspomniany wyżej człowiek. Przez niego musiał przyzwyczaić się do siedzenia przy zasuniętych żaluzjach, a zasunięte żaluzje sprawiały, że czuł się w pewien sposób ograniczany, nie mówiąc już o tym, że wykonane z metalu znacznie obniżały transfer pożyczanego od sąsiada sygnału sieci Wi-Fi, którą Zbyszek wykorzystywał do pobierania z torrentów …legalnych dystrybucji Linuksa. Nie mogąc uwierzyć, że kolejny rok minął mu tak szybko, westchnął i uruchomił radioodbiornik stojący na biurku. Z głośników rozległo się: — „A więc zaczęło się na dobre…” — pomyślał, kierując swoje kroki do kuchni. Jakby na domiar złego, z telewizora popłynęła reklama kolejnego symbolu świąt: Do kompletu zwiastunów zbliżających się wielkimi krokami świąt, brakowało jeszcze tylko jednego – e-maili od znajomych, zawierających świąteczne życzenia. Kiedy uświadomił sobie, że lada chwila zacznie otrzymywać żenująco płytkie, skopiowane z internetu świąteczne wierszyki i pozdrowienia, zrobiło mu się słabo. Zawsze wtedy czuł się szantażowany emocjonalnie: z obrzydzeniem odpisać „Dzięki, wzajemnie!”, czy olać i wyjść na gbura. Uznał, że najlepszą metodą obrony w tym wypadku będzie atak! Automatyzacja wypisywania świątecznych kartek W przeciwieństwie do swoich znajomych, Zbyszek był zbyt leniwy żeby wysyłać życzenia (nawet skopiowane z sieci) ręcznie. Przypomniał sobie o swoim koledze pracującym w korporacji w roli Quality Assurance Engineer. Ten, w ramach ciekawostki pokazał mu, jak automatyzuje gry przeglądarkowe za pomocą narzędzia o nazwie Selenium IDE. Był to prosty plugin do przeglądarki Firefox, który pozwalał nagrywać, a następnie odtwarzać akcje użytkownika. Program nie zachwycał oprawą graficzną –- ale przecież „liczy się wnętrze…” pomyślał Zbyszek i rozpoczął od znalezienia najbardziej żenujących życzeń świątecznych w sieci. Następnie stworzył listę adresów e-mail swoich znajomych. Ta część jego planu wymagała niestety trochę wysiłku, ale stracony czas miał się zwrócić podczas wysyłki życzeń noworocznych i świąt wielkanocnych. W końcu skrypt automatyczny będzie bezobsługowy i możliwy do wielokrotnego wykorzystania przy każdej okazji — wystarczy jedynie zmienić szablon treści życzeń! Aby dodać szablon życzenia w Selenium, należy jako komendy użyć storeEval, a w polu “target” wpisać treść życzeń i nazwać zmienną np. “życzenia” (w polu “value”). Teraz wystarczyło znaleźć darmową bramkę do wysyłania wiadomości! Najlepiej taką bez zabezpieczenia CAPTCHA, bo choć istnieją sprawdzone metody na obejście tego mechanizmu, to o tej godzinie nie czuł się już na siłach, aby zmierzyć się z tematem. Po znalezieniu strony, ale przed wejściem na nią, Zbyszek nacisnął w Selenium przycisk “record”. Dzięki czemu narzędzie automatycznie dodało komendę odpowiedzialną za wejście na żądany adres URL, kiedy strona z bramką otwarła się w przeglądarce. „Prostota i skuteczność – dokładnie czegoś takiego potrzebowałem!” — pomyślał Zbyszek widząc najlepszą na świecie (bo darmową) bramkę mailową. Dalsze kroki wymagały jednak od niego większego zaangażowania, na szczęście, z Selenium poradzi sobie każdy, nawet średnio rozgarnięty Script Kidd, więc i Zbyszek dał radę. Nacisnął przycisk „Select”, a następnie w przeglądarce kliknął w pole formularza, które planował zautomatyzować. Jako komendę wybrał „Click”, a do parametru Value wpisał swój adres email. Pola adresat i treść wiadomości zautomatyzował w ten sam sposób. Na końcu, pozostało tylko przepisać ze znalezionego w Internecie przykładu kilka kroków, pozwalających na automatyczne zapętlenie serii zapisanych komend. Zbyszkowi zależało w końcu na tym, aby wszystkie kroki zostały wykonane dla każdego maila z jego listy. Po krótkiej chwili spojrzał z dumą na finalną wersję swojego skryptu: Pozostało wcisnąć tylko przycisk Run i zobaczyć efekty swojej pracy (kliknij w obrazek, bo GIF): Zbyszek był wniebowzięty. W głowie zaczęły mu się pojawiać nowe pomysły na wykorzystanie Selenium. W analogiczny sposób mógł przecież zautomatyzować inne wykonywane przez niego cyklicznie czynności. Wykorzystanie Selenium do ataków na serwisy internetowe Ponieważ robiło się już późno, projekt wykorzystania Selenium do testów bezpieczeństwa postanowił przełożyć na jutro. Po pracy miał już co prawda zaplanowaną lekcję baletu, ale wpadł na pomysł, jak wyrwać się z pracy, aby nikt nie zauważył. Skoro Selenium to narzędzie symulujące ruchy użytkownika, to jutro uruchomi je na swoim firmowym komputerze, dzięki czemu korporacyjny monitoring stacji roboczej nie wykryje, że nie ma go aktualnie przed komputerem. On w tym czasie uda się do toalety i tam odda się swojej nowej pasji. Na twarzy Zbyszka pojawił się złowieszczy uśmiech. Lista pomysłów rosła z każdą minutą. W kolejnych dniach fascynacji Selenium, Zbyszek odkrył, że narzędzie to może zostać wykorzystane także do przeprowadzania bardziej skomplikowanych testów bezpieczeństwa serwisów internetowych. A potem trafił na Selenium Webdriver i dopiero się zaczęło… Zbyszek wiedział już, co musi zrobić, aby nauczyć się w pełni wykorzystać możliwości oferowane przez ten framework — wziąć udział w nowym szkoleniu organizowanym przez Niebezpiecznik pt. “Tester bezpieczeństwa“, skierowanym tylko i wyłącznie do testerów QA. Dzięki poruszanym na szkoleniu zagadnieniom i specjalnie przygotowanym przez niebezpiecznikowych pentesterów ćwiczeniom praktycznym, każdy tester QA możę dowiedzieć się jak podnieść swoje kompetencje i wykorzystać znane mu już narzędzia, takie jak Selenium, FireBug, jMeter do przeprowadzenia podstawowych testów bezpieczeństwa. Ekipa Niebezpiecznika przez ostatnie 10 lat przetestowała setki serwisów internetowych pod kątem bezpieczeństwa. W naszych raportach z testów penetracyjnych regularnie wykazujemy od kilku do kilkuset podatności. Uważamy, że wiele z nich firmy mogłyby z łatwością wykryć już na etapie testowania aplikacji przez wewnętrzne działy testerów (QA), co znacznie ograniczyłoby koszty wytworzenia oprogramowania. Wykorzystywane przez QA narzędzia można łatwo wykorzystać do przeprowadzenia podstawowych testów bezpieczeństwa — niestety, nie każdy tester wie jak. Dlatego właśnie przygotowaliśmy specjalistyczne szkolenie dedykowane pracownikom działów QA. Osoby odpowiedzialne za zapewnianie jakości oprogramowania, dowiedzą się z niego jak niewielkim nakładem dodatkowej pracy, zyskać kompetencje w zakresie wykonywania tak pożądanych obecnie testów bezpieczeństwa. Zainteresowane osoby odsyłamy do pełnej agendy szkolenia. To szkolenie jest jednym z pierwszych działań Niebezpiecznika w obszarze usług dedykowanych kontroli jakości oprogramowania. Niebawem ujawnimy kolejne niespodzianki jakie przygotowaliśmy dla działów QA. PS. Najbliższy termin to tego szkolenia to 23-24 lutego 2017 w Krakowie. Dajcie znać znajomym testerom i do zobaczenia! ,Mateusz Piaszczak