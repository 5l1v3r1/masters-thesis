Odkryto błąd w SDK Dropboksa, czyli fragmencie kodu, który jest wykorzystywany przez dziesiątki aplikacji mobilnych w celu synchronizacji plików użytkownika z chmurą Dropboksa. Dziura pozwala na przekierowanie synchronizowanego przez ofiarę pliku na podstawione przez atakującego konto. Na początek warto nadmienić, że SDK Dropboksa, czyli kod pozwalający na wysyłanie plików do chmury Dropboksa, jest implementowany przez wiele popularnych aplikacji; m.in. 1Password czy Microsoft Office Mobile. Niestety, SDK w wersjach 1.5.4 – 1.6.1 posiada poważny błąd… Na czym polega atak DroppedIn? Aby kradzież synchronizowanego pliku doszła do skutku, atakujący musi najpierw wymusić na ofierze skojarzenie którejś z androidowej aplikacji mobilnej wykorzystającej SDK Dropboksa z fałszywym kontem. W tym celu wystarczy, że zaprosi ofiarę na odpowiednio spreparowaną stronę internetową. Na skutek dziury w SDK Dropboksa atakujący może bowiem (poprzez atak drive-by download) wykraść tzw. nonce i powiązać go z własnym kontem. Jeśli po odwiedzeniu strony atakującego ofiara będzie chciała wysłać jakiś plik do chmury Dropboksa, wyśle go na nieswoje konto. Oto wizualizacja ataku: Warto tu jednak nadmienić, że atak zadziała tylko wtedy, kiedy na urządzeniu ofiary nie ma zainstalowanej aplikacji Dropboksa. Dodatkowo, choć atak jest widowiskowy, to ofiara zazwyczaj bardzo szybko zorientuje się, że na swoim koncie w chmurze Dropboksa brakuje jej synchronizowanego pliku (główny powód sychronizacji to chęć “przegrania” pliku na inne urządzenie). Błąd został znaleziony przez Roee Hay oraz Or Peles z IBM Security Systems i ujawniony Dropboksowi na początku grudnia 2014. Po 4 dniach Dropbox wypuścił nową wersję SDK, niepodatną na ten atak (1.6.2). Wszystkich developerów aplikacji mobilnych zachęcamy do aktualizacji SDK, a czytelników do aktualizacji aplikacji, w których wykorzystują funkcję synchronizacji z Dropboksem. ,vi.curry