Na blogu googlowego Projektu Zero właśnie pojawił się opis ciekawego ataku o nazwie “Rowhammer“. Badacze pokazują w nim jak za pomocą wielokrotnie powtarzanych odczytów pewnych obszarów pamięci DRAM można wymusić przeskoczenie bitu w innym obszarze pamięci. Atak jest o tyle groźny, że za jego pomocą złośliwy proces może wpływać na zawartość pamięci innego procesu, do której normalnie z racji separacji nie ma dostępu. Badacze zademonstrowali kod exploita, który dzięki technice Row Hammer uzyskuje prawa roota, pomimo tego, że został odpalony z prawami użytkownika. Na czym polega atak Rowhammer? Sam przeskok bitu informacji zapisanej w pamięci RAM, to znany od dawna problem, który opisał w 2003 roku Sudhakar Govindavajhala, a w 2014 roku temat zgłębił Yoongu Kim (por. publikacja naukowa pt. Flipping Bits in Memory Without Accessing Them: An Experimental Study of DRAM Disturbance Errors). W skrócie: wielokrotne uzyskiwanie dostępu do dwóch adresów w pamięci (do której dany proces ma dostęp) powoduje przeskok bitu w trzeciej lokalizacji, która znajduje się w innym rzędzie (ang. “row“) pamięci DRAM na innej stronie (ang. “page“) — innych 4k. Atak działa, ponieważ współczesne pamięci DRAM stają się mniejsze, przez co komórki pamięci znajdują się coraz bliżej siebie. Taka budowa wprowadza niestabilności układu (komórki oddziałują ze sobą elektrycznie i ładunek z jednej może “wyciec” na sąsiednią). Powtarzanie zapisu niejako większa “wyciek” ładunku, który w końcu może spowodować tzw. “przeskok bitu“, czyli zamianę 01. 2 lata temu opisywaliśmy technikę “bitsquattingu” czyli rejestracji domeny o jeden bit innej niż oryginalna i oczekiwanie aż pod tę domenę zawędruje komputer, którego pamięć RAM doznała błędu (zmiany jednego bita np. na skutek promieniowania kosmicznego). Od słów do czynów — implementacja ataku Rowhammer Yoongu i jego koledzy, choć rok temu stwierdzili, że odpowiednie wpływanie na bity w pamięci może prowadzić do przejęcia systemu, to nie zademonstrowali ataku w praktyce. Braki te uzupełnili właśnie badacze Google, którzy do zobrazowania ataku Rowhammer użyli m.in. instrukcji x86 o nazwie CLFLUSH, wymuszającej ominięcie mechanizmu cache — a atak wykonali na systemie Linux. Badacze podejrzewają jednak, że Row Hammera można również wykorzystać na innych architekturach przy pomocy innych instrukcji. A oto przykładowy exploit: code1a: mov (X), %eax // Read from address X mov (Y), %ebx // Read from address Y clflush (X) // Flush cache for address X clflush (Y) // Flush cache for address Y jmp code1a Aby całość zadziałała, adresy X i Y muszą być w różnych wierszach tej samej kości pamięci, inaczej odczyty nie będą powodowały tzw. “aktywowania” wiersza (czyli zmian ładunku), a to właśnie wielokrotne aktywowanie umożliwia przeskok bitu. Po opis tego jak odpowiednio dobierać wartości X i Y odsyłamy do oryginalnej publikacji. Exploity Badaczom udało się stworzyć 2 działające exploity. Pierwszy ucieka z sandoboksa tzw. “natywnego klienta” (NaCl) na architekturze x86-64 i ma możliwość bezpośredniego odwoływania się do wywołań systemowych systemu operacyjnego. Drugi z exploitów działa jako standardowy proces x86-64 na Linuksie i podnosi uprawnienia zyskując dostęp do całości pamięci fizycznej. Badacze sugerują też, że Rowhammer może sprawić kłopot w środowiskach zwirtualizowanych. Tego może się nie dać załatać… Badacze nie są w stanie oszacować, które konkretnie modele pamięci są podatne na ten atak oraz czy podatność tę w ogóle można “załatać” bez wymiany kości RAM — w końcu przyczyny błędu należy upatrywać w coraz ściślejszym upakowaniu komórek pamięci, co wprowadza pewne konstrukcyjne “niestabilności” układu. Opublikowane przez siebie wyniki zanonimizowali (nie poznamy nazw podatnych na atak modelów laptopów i prodcucentów pamięci DDR3 DRAM). Dlatego aby sprawdzić czy Wasz laptop jest podatny na ten atak, skorzystajcie z tego skryptu udostępnionego przez badaczy. Jeśli wasza kość jest podatna (pojawiają się błędy) to w zasadzie jedynym pewnym obecnie wyjściem jest zamiana pamięci na ECC lub LPDDR4 — no i oczywiście duża rozwaga w tym, jaki kod (oprogramowanie) uruchamiacie na swoim sprzęcie. PS. Sprawdzone przez badaczy desktopy były wyposażone w pamięci ECC i żadna z nich nie umożliwiała wykonania ataku Rowhammer. Badacze odkryli też, że niektórzy z producentów BIOS-ów po cichu zwiększyli częstotliwość odświeżania pamięci, co miało utrudnić przeprowadzenie ataków Rowhammer (ale niestety ich nie wyeliminowało). ,vi.curry