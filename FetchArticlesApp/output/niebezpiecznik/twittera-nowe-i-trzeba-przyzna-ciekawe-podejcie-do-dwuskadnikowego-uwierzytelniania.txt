Większość dzisiejszych serwisów, wprowadzając dwuskładnikowe uwierzytelnianie opiera się na telefonie użytkownika: albo trzeba przepisać kod z SMS-a, albo podać wartość generowaną przez odpowiednią aplikację-token. Twitter ma lepszy pomysł. Powód wprowadzenie nowej metody uwierzytelniania Nowe podejście Twittera do dwuskładnikowego uwierzytelniania ma uniemożliwić ataki, które ostatnio miały miejsce, a które polegały na przejęciu twitterowych kont poprzez phishing (tak, użytkowników oprócz hasła pytano o jednorazowe kody wyświetlane na telefonie, a ci je podawali… a czasem byli także w stanie przejąć sam numer telefonu komórkowego). Dodatkowo, nowa metoda chroni przed podsłuchaniem SMS-a z kodem. Przypomnijmy, że sniffing w sieciach telefonii komórkowej jest możliwy nie tylko na poziomie PRISMoperatora sieci GSM, ale także poprzez dowolną osobę dysponującą IMSI Catcherem. Nie wspominając już o złośliwym oprogramowaniu, które może zagnieździć się na telefonie klienta (por. ZeuS in the mobile). Nowy sposób dwuskładnikowego uwierzytelnienia rozwiązuje więc sporo problemów i jest bardzo prosty w obsłudze — użytkownik Twittera po wpisaniu loginu i hasła na stronie internetowej musi dodatkowo kliknąć przycisk w aplikacji (żadnego przepisywania kodów) na ekranie podsumowującym szczegóły związane z konkretnym logowaniem: czas logowania lokalizację geograficzną klienta (GeoIP) rodzaj przeglądarki Na czym polega podejście Twittera do 2FA Twitterowa aplikacja generuje 2048 bitową parę kluczy RSA. Prywatny zostawia u siebie, publiczny wysyła na serwery Twittera. Przy próbie logowania, Twitter generuje losową wartość i wysyła ją na telefon. Telefon podpisuje wartość kluczem prywatnym (jeśli użytkownik kliknie na przycisk wyrażający zgodę na logowanie), a następnie odsyła podpisaną wartość do serwera Twittera, gdzie serwer weryfikuje podpis kluczem publicznym użytkownika. Mechanizm jak widać bazuje na stałym dostępie do telefonu i na dostępie do internetu w telefonie — ale pomyślano o użytkownikach, którzy mogą znajdować się poza zasięgiem sieci GSM albo w roamingu (pozdrawiamy klientów Plus na kartę :>) lub nieszczęśnikach, którzy zgubili telefon. Aplikacja Twittera potrafi bowiem wygenerować “kod zapasowy“, który użytkownik może zapisać i wykorzystać w jednej z powyższych sytuacji. Generowanie kodu backupowego jest bardzo sprytne: 1. Aplikacja wykorzystuje algorytm S/KEY, który przetwarza losowe, 64-bitwe ziarno, hashując je 10 000 razy i konwertując do 12 znakowego stringa, który jest wysyłany na serwer Twittera. 2. Użytkownik po zużyciu tego hasha (czyli kodu zapasowego) jest proszony o zapamiętanie kolejnej wartości, która tym razem jest wynikiem hashowania 9 999 razy. Przy kolejnym uwierzytelnieniu “offline”, przesłanie tej wartości do Twittera powoduje jej zahashowanie przez serwer jeszcze raz i porównanie do przechowywanego na serwerze stringa będącego wynikiem 10 000 hashowania. Serwer trzyma więc tylko jedną wartość, a taki sposób wykorzystania zapasowych kodów nie jest podatny na ataki powtórzeniowe i dodatkowo, nawet jeśli atakujący wykradnie z serwera wartość 10 000 hasha (na nawet kilku poprzednich), to nie będzie w stanie na jego podstawie obliczyć innych kodów backupowych. Dodatkowo kody backupowe można generować na telefonie bez konieczności bycia podpiętym do internetu. Nie ma 100% bezpieczeństwa O ile nowe podejście Twittera do 2FA rozwiązuje znane problemy związane z tą metodą uwierzytelnienia, to nie uodparnia na wszystkie ataki. Włamywacz może przecież podmienić wartość 10 000 hasha na serwerze Twittera dla danego użytkownika i uwierzytelnić się w ten sposób (o ile nie ma jeszcze bezpośredniego dostępu do bazy i danych ofiary). Atakujący w ogóle nie musi się przejmować 2FA jeśli znajdzie się w tak komfortowej sytuacji, że fizycznie przejmie telefon ofiary (i uda mu się złamać hasło dostępowe), a ofiara jest zalogowana w aplikacji Twittera do swojego konta. No ale nie do ochrony przed takimi zagrożeniami wymyślono 2FA… ,Piotr Konieczny