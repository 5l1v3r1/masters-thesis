7 października na WikiLeaks pojawiła się zawartość prywatnej skrzynki GMail należącej do Johna Podesty, szefa kampanii prezydenckiej Hillary Clinton. Eksperci już wcześniej podejrzewali, że za atakami stali Rosjanie. Na podstawie ujawnionych e-maili można dokładnie odtworzyć, jak rosyjscy włamywacze pozyskali zawartość skrzynki Podesty. I jest to jeden z niewielu ataków obcego wywiadu na wysoko postawionego polityka, który został tak szczegółowo opisany na forum publicznym. Przyjrzymy się więc, z jakich to “tajnych” tricków korzystają Ci, którzy hackują na rzecz rosyjskich instytucji rządowych FSB lub GRU i zastanówmy się co Podesta, lub jakikolwiek inny użytkownik GMaila, może zrobić, aby nie dać się rządowym “hackerom”. Spear phishing – klucz do skrzynek pocztowych Dzięki dumpowi na WikiLeaks wiemy, że w marcu 2016 roku, Podesta na swoją prywatną skrzynkę na GMailu otrzymuje następującą wiadomość: Wiadomość, choć podszywa się pod Google, najwyraźniej nie wpadła do spamu. Nawet pomimo tego, że link prowadzący do zmiany hasła odwoływał się do tego URL-a: hxxps://bit.ly/1PibSU0 A więc każdy rozsądnie myślący człowiek, od razu zauważyłby, że jest to wiadomość fałszywa. Google korzystające ze skracacza URL? I to jeszcze nie swojego? John Podesta, a dokładniej, jedna z jego asystentek (która miała dostęp do prywatnej skrzynki Podesty, gdyż intensywnie korzystał on z gmaila do załatwiania służbowych spraw), też miała podejrzenia i dlatego przesłała tę wiadomość do sztabowego informatyka (Charles Delavan). A ten potwierdził, że e-mail jest prawdziwy (sic!) i kazał Podeście zmienić hasło. Później Delavan tłumaczył się, że odpisując Podeście, zrobił literówkę — chciał napisać illegitimate (nieprawdziwy), a napisał legitimate (prawdziwy). Niestety, Podesta po radzie Delevana, w link kliknął (a dokładnie, 2 razy kliknął): Jak widać, docelowym adresem jest strona: hxxp://myaccount.google.com-securitysettingpage.tk/security/signinoptions/password?e=am9obi5wb2Rlc3RhQGdtYWlsLmNvbQ%3D%3D&fn=Sm9obiBQb2Rlc3Rh &n=Sm9obg%3D%3D&img=Ly9saDQuZ29vZ2xldXNlcmNvbnRlbnQuY29tLy1RZVlPbH JkVGp2WS9BQUFBQUFBQUFBSS9BQUFBQUFBQUFCTS9CQldVOVQ0bUZUWS9waG90by 5qcGc%3D&id=1sutlodlwe Po przejściu na ten adres, każdemu powinny się od razu zapalić 2 ostrzegawcze lampki. Pierwsza, bo brakuje https (czyli “kłódki”), a druga, bo strona do zmiany hasła Google jest hostowana w domenie .tk. Tu ciekawostka. Te “krzaki” w URL-u nie są przypadkowe. Jest to zakodowany w Base64 adres e-mail Podesty. Dlaczego to jest ciekawe? Ponieważ sugeruje, że Podesta nie był jedynym celem atakujących. Kiedy atakuje się wąską grupę ofiar, przygotowuje się dedykowane, statyczne, dopasowane pod ofiary strony. Jest to szybsze i pewniejsze, niż tworzenie mechanizmu automatyzacji ataku, jaki tu widzimy, a który poprzez parametry w URL przekazuje silnikowi strony jaki adres e-mial i obrazek (avatar) ofiary podstawić na fałszywej stronie logowania. Automatyzacja ataku sugeruje dużą skalę No ale skoro taki mechanizm automatyzacji został zastosowany, to należy zadać pytanie, ile ofiar jednocześnie targetowali Rosjanie i kim te ofiary były (w końcu w linkach zakodowane są ich adresy e-mail, więc można do tego dojść)? Na to pytanie odpowie nam bit.ly, z którego zapewne dla wygody (API do generowania linków) skorzystali atakujący. W trakcie (i tuż po ataku), konto jakie zostało wykorzystane do wygenerowania linka nie było ustawione jako “prywatne”. Dzięki temu można było przejrzeć wszystkie stworzone przez atakujących linki. Zrobił to zespół SecureWorks, który wskazał, że za atakiem stoi grupa określana przez badaczy następującymi nazwami APT28, Sofacy, Sednit, Fancy Bear, Pawn Storm. W raporcie SecureWorks czytamy: Jest też bardzo ciekawe rozbicie ofiar na kategorie: Mam GMaila, jak Podesta — co robić, jak żyć? Nie korzystaj z prywatnego konta do załatwiania spraw służbowych. Ale przede wszystkim, nie korzystaj z tego samego hasła co do prywatnej skrzynki, także do innych kont, zwłaszcza służbowych. Rosjanie właśnie z tego powodu atakują prywatne/darmowe skrzynki swoich “celów” na publicznych, popularnych serwerach pocztowych. Raz, że co do zasady, monitoring tego typu incydentów nie jest tak ścisły jak w infrastrukturze firmy (w wojsku, u kontraktorów wojskowych, instytucjach rządowych, etc.). W “pracy”, ofiara po otrzymaniu e-maila o podejrzanej aktywności na swoim koncie, może zapytać firmowego administratora, czy to prawda. W przypadku gdy taki e-mail otrzyma na GMailu — powodzenia w znalezieniu telefonu do “helpdesku”. Dwa, że ludzie korzystają z tych samych haseł (lub bardzo podobnych) w różnych miejscach. Mając hasło do prywatnej skrzynki, sprawdza się, czy firmowy CRM/VPN/Webmail przypadkiem nie ma podobnego hasła. Podczas wykonywanych przez zespół Niebezpiecznika symulacji ataków na polskie i zagraniczne firmy, tzw. “reuse haseł” jest jednym z najczęstszych powodów, który wykorzystujemy do eskalacji ataku na inne firmowe zasoby ofiary. Niektórzy sugerują, że Podesta nie zostałby “zhackowany”, gdyby miał włączone dwuskładnikowe uwierzytelnienie. Moim zdaniem nie jest to prawda. Warto zauważyć, że dwuskładnikowe uwierzytelnianie, w tradycyjnym rozumieniu (kod SMS lub kod generowany przez aplikację Google Authenticator), nawet jeśli Podesta miałby je włączone, wcale by nie pomogły. On po prostu przepisałby wyświetlające mu się na ekranie telefonu cyfry do odpowiedniego pola na fałszywej stronie. Jedynym ratunkiem na tak naiwnych użytkowników jest wykorzystanie U2F, czyli Universal 2nd Factor Authentication, które od wielu miesięcy zachwalamy uczestnikom naszych szkoleń i konferencyjnych prelekcjach. Dlatego już dziś kup klucz U2F i skonfiguruj go z popularnymi serwisami internetowymi. Masz GMaila, GitHuba, Dropbox, LastPassa/Keypassa? Skonfiguruj U2F Na czym to polega? Kupujecie (tani, kilka–kilkadziesiąt dolarów) token, który w prosty sposób kojarzycie z kontem Google w ustawieniach konta Google. Albo z Dropboxem, czy GitHubem albo innymi serwisami, które wspierają U2F. Klucz, podczas logowania do serwisu, dzięki API przeglądarki: 1. weryfikuje URL serwisu, 2. a po poprawnej weryfikacji, wykonuje “w sobie” na tzw. “bezpiecznym elemencie”, uwierzytelnienie dzięki kryptografii asymetrycznej Innymi słowy, klucz nie zadziała podczas próby logowania na fałszywej domenie, więc atakujący nie wyłudzą “drugiego składnika”, który poza posiadanym już hasłem jest im potrzebny do przejęcia konta. Jedyny minus na dzień dzisiejszy jest taki, że U2F wspiera tylko Google Chrome. Dla Firefoksa jeszcze nie ma natywnego wsparcia (bug 1065729), ale jest rozszerzenie stworzone przez naszego rodaka. Bonusem z zakupu silniejszej (i niestety trochę droższej) wersji klucza U2F marki Yubikey jest to, że można go wykorzystać do przechowywania w bezpieczny sposób kluczy GPG, uwierzytelnienia OTP lub logowania do komputerów z systemami Windows, Linux albo Mac. Jako Niebezpiecznik uważamy, że klucze U2F to najlepsza ochrona przed phishingiem i udało nam się do tego przekonać kilku naszych klientów, którzy zakupili klucze dla swoich pracowników i aktywnie z nich korzystają w zewnętrznych i wewnętrznych usługach. Tu warto nadmienić, że jeden z dostawców kluczy U2F, Yubico, udostępnia sporo API i dokumentacji dla deweloperów, jako Open Source. Dzięki temu możecie błyskawicznie wbudować w swoje oprogramowanie/serwisy internetowe funkcję uwierzytelniania przez U2F — prosto i za darmo. Jeśli do U2F nie przekonuje Was nasza opinia, to rzućcie okiem na to jak klucze U2F wdrożono dla wszystkich pracowników w takich małych firemkach jak Facebook czy Google ;-) Oto obowiązkowe dwie prelekcje pokazujące jak wyglądało wdrożenie U2F w Facebooku (wykorzystują go nawet podczas logowania do serwerów po SSH/SFTP!) oraz świetna praca naukowa, która pokazuje kulisy wdrożenia U2F w Google — dzięki wdrożeniu kluczy koszty z zarządzaniem kontami Googlersów obniżono tak bardzo, że ze zgromadzonych oszczędności dokupiono każdemu drugi klucza (do konta można podpiąć kilka klucz, gdyby jeden został zgubiony, zawsze będzie dostępny drugi — i warto nadmienić, że znalazca klucza nie odczyta z niego żadnych danych identyfikujących użytkownika czy skojarzone konta. Bo klucz takich danych nie przechowuje. Magia kryptografii asymetrycznej!). Czy Podesta to naiwniak? Zastanawiacie się pewnie, jaka jest skuteczność takich kampanii, które kierują użytkownika przez zły link, na fałszywą stronę, bez HTTPS (“zielonej kłódki”)? SecureWorks przeanalizowało 4,396 linków, jakie zostały przez Rosjan wysłane do 1,881 użytkowników Google pomiędzy marcem a wrześniem 2015. Więcej niż połowa (59%) z tych linków została odwiedzona, co sugeruje, że ofiary co najmniej przeszły na fałszywą stronę logowania. Nie jest możliwe stwierdzenie na tej podstawie, ile osób podało na fałszywej stronie swoje hasło i ile konto zostało dzięki temu przejętych. Niektóre z ofiar otrzymywały kolejne wiadomości mające na celu wyłudzenie haseł (można więc domniemywać, że nie nabrały się za pierwszym razem). 35% ofiar nie otrzymało kolejnych linków, co może sugerować do tylu kont udało się dostać lub atakujący nie próbowali drugi raz. Ale warto odnotować, że spośród tych, którzy otrzymali fałszywą wiadomość tylko raz, aż 60% kliknęło w linka. Spośród tych, którzy wiadomość otrzymali więcej niż raz, 57% osób otworzyło linka przy którejś z kolejnych prób. Przy takiej skali ataku zastanawiające jest, ile z prób logowania Rosjan na konta skutecznie zphishingowanych ofiar wykryły i zablokowały wewnętrzne systemy analizujące anomalie po stronie GMaila. Przecież na te konta ktoś, skądś (a zwłaszcza z innego niż zwykle IP) musiał się zalogować i pobrać, przejrzeć, wyszukać pod kątem konkretnych słów kluczowych całą pocztę. Wydaje się, że procedura ekstrakcji danych jest schematyczna i może być dobrym wskaźnikiem, że na koncie coś jest nie tak. Ciekawe czy Google i inni dostawcy poczty zwracają na takie zachowanie uwagę. Wniosek: socjotechnika najskuteczniejsza Statystyka z kampanii jaką Rosjanie przeprowadzili przy użyciu bit.ly na konta Google jest zbieżna z naszymi wewnętrznymi statystykami — success rate na poziomie 60%. Niebezpiecznik od ponad 4 lat wykonuje symulacje ataków socjotechnicznych na polskie firmy, korzystając nie tylko ze spearphishingu, ale również infekcji “niezłośliwym” złośliwym oprogramowaniem, aby móc uzyskać dostęp do sieci wewnętrznej atakowanej firmy. Patrząc na to, jak podobne ataki przeprowadzają rosyjskie agencje rządowe, nie mamy się czego wstydzić. Nasza infrastruktura (preteksty e-maili, domeny wykorzystywane do budowy linków, serwery obsługujące atak) jest bardziej zaawansowana i dopracowana niż to, z czego korzystali Rosjanie do ataków na sztab Hillary Clinton. Na kilku konferencjach w 2016 roku pokazywałem przykłady takich ataków w oparciu o faktyczne, choć ocenzurowane z danych osobowych, e-maile. Kto był, ten wie, do czego jesteśmy zdolni i jak łatwo przekuć nawet nie-do-końca udany atak na pełen sukces ;) Gdyby ktoś z Was chciał przetestować swoich pracowników na — jak widać najprostsze i szalenie skuteczne — ataki socjotechniczne z wykorzystaniem e-maila, telefonu lub kontaktu bezpośredniego (wizyty w firmie), zapraszamy do kontaktu, z przyjemnością Was zaatakujemy :-) ,Piotr Konieczny7 października na WikiLeaks pojawiła się zawartość prywatnej skrzynki GMail należącej do Johna Podesty, szefa kampanii prezydenckiej Hillary Clinton. Eksperci już wcześniej podejrzewali, że za atakami stali Rosjanie. Na podstawie ujawnionych e-maili można dokładnie odtworzyć, jak rosyjscy włamywacze pozyskali zawartość skrzynki Podesty. I jest to jeden z niewielu ataków obcego wywiadu na wysoko postawionego polityka, który został tak szczegółowo opisany na forum publicznym. Przyjrzymy się więc, z jakich to “tajnych” tricków korzystają Ci, którzy hackują na rzecz rosyjskich instytucji rządowych FSB lub GRU i zastanówmy się co Podesta, lub jakikolwiek inny użytkownik GMaila, może zrobić, aby nie dać się rządowym “hackerom”. Spear phishing – klucz do skrzynek pocztowych Dzięki dumpowi na WikiLeaks wiemy, że w marcu 2016 roku, Podesta na swoją prywatną skrzynkę na GMailu otrzymuje następującą wiadomość: Wiadomość, choć podszywa się pod Google, najwyraźniej nie wpadła do spamu. Nawet pomimo tego, że link prowadzący do zmiany hasła odwoływał się do tego URL-a: hxxps://bit.ly/1PibSU0 A więc każdy rozsądnie myślący człowiek, od razu zauważyłby, że jest to wiadomość fałszywa. Google korzystające ze skracacza URL? I to jeszcze nie swojego? John Podesta, a dokładniej, jedna z jego asystentek (która miała dostęp do prywatnej skrzynki Podesty, gdyż intensywnie korzystał on z gmaila do załatwiania służbowych spraw), też miała podejrzenia i dlatego przesłała tę wiadomość do sztabowego informatyka (Charles Delavan). A ten potwierdził, że e-mail jest prawdziwy (sic!) i kazał Podeście zmienić hasło. Później Delavan tłumaczył się, że odpisując Podeście, zrobił literówkę — chciał napisać illegitimate (nieprawdziwy), a napisał legitimate (prawdziwy). Niestety, Podesta po radzie Delevana, w link kliknął (a dokładnie, 2 razy kliknął): Jak widać, docelowym adresem jest strona: hxxp://myaccount.google.com-securitysettingpage.tk/security/signinoptions/password?e=am9obi5wb2Rlc3RhQGdtYWlsLmNvbQ%3D%3D&fn=Sm9obiBQb2Rlc3Rh &n=Sm9obg%3D%3D&img=Ly9saDQuZ29vZ2xldXNlcmNvbnRlbnQuY29tLy1RZVlPbH JkVGp2WS9BQUFBQUFBQUFBSS9BQUFBQUFBQUFCTS9CQldVOVQ0bUZUWS9waG90by 5qcGc%3D&id=1sutlodlwe Po przejściu na ten adres, każdemu powinny się od razu zapalić 2 ostrzegawcze lampki. Pierwsza, bo brakuje https (czyli “kłódki”), a druga, bo strona do zmiany hasła Google jest hostowana w domenie .tk. Tu ciekawostka. Te “krzaki” w URL-u nie są przypadkowe. Jest to zakodowany w Base64 adres e-mail Podesty. Dlaczego to jest ciekawe? Ponieważ sugeruje, że Podesta nie był jedynym celem atakujących. Kiedy atakuje się wąską grupę ofiar, przygotowuje się dedykowane, statyczne, dopasowane pod ofiary strony. Jest to szybsze i pewniejsze, niż tworzenie mechanizmu automatyzacji ataku, jaki tu widzimy, a który poprzez parametry w URL przekazuje silnikowi strony jaki adres e-mial i obrazek (avatar) ofiary podstawić na fałszywej stronie logowania. Automatyzacja ataku sugeruje dużą skalę No ale skoro taki mechanizm automatyzacji został zastosowany, to należy zadać pytanie, ile ofiar jednocześnie targetowali Rosjanie i kim te ofiary były (w końcu w linkach zakodowane są ich adresy e-mail, więc można do tego dojść)? Na to pytanie odpowie nam bit.ly, z którego zapewne dla wygody (API do generowania linków) skorzystali atakujący. W trakcie (i tuż po ataku), konto jakie zostało wykorzystane do wygenerowania linka nie było ustawione jako “prywatne”. Dzięki temu można było przejrzeć wszystkie stworzone przez atakujących linki. Zrobił to zespół SecureWorks, który wskazał, że za atakiem stoi grupa określana przez badaczy następującymi nazwami APT28, Sofacy, Sednit, Fancy Bear, Pawn Storm. W raporcie SecureWorks czytamy: Jest też bardzo ciekawe rozbicie ofiar na kategorie: Mam GMaila, jak Podesta — co robić, jak żyć? Nie korzystaj z prywatnego konta do załatwiania spraw służbowych. Ale przede wszystkim, nie korzystaj z tego samego hasła co do prywatnej skrzynki, także do innych kont, zwłaszcza służbowych. Rosjanie właśnie z tego powodu atakują prywatne/darmowe skrzynki swoich “celów” na publicznych, popularnych serwerach pocztowych. Raz, że co do zasady, monitoring tego typu incydentów nie jest tak ścisły jak w infrastrukturze firmy (w wojsku, u kontraktorów wojskowych, instytucjach rządowych, etc.). W “pracy”, ofiara po otrzymaniu e-maila o podejrzanej aktywności na swoim koncie, może zapytać firmowego administratora, czy to prawda. W przypadku gdy taki e-mail otrzyma na GMailu — powodzenia w znalezieniu telefonu do “helpdesku”. Dwa, że ludzie korzystają z tych samych haseł (lub bardzo podobnych) w różnych miejscach. Mając hasło do prywatnej skrzynki, sprawdza się, czy firmowy CRM/VPN/Webmail przypadkiem nie ma podobnego hasła. Podczas wykonywanych przez zespół Niebezpiecznika symulacji ataków na polskie i zagraniczne firmy, tzw. “reuse haseł” jest jednym z najczęstszych powodów, który wykorzystujemy do eskalacji ataku na inne firmowe zasoby ofiary. Niektórzy sugerują, że Podesta nie zostałby “zhackowany”, gdyby miał włączone dwuskładnikowe uwierzytelnienie. Moim zdaniem nie jest to prawda. Warto zauważyć, że dwuskładnikowe uwierzytelnianie, w tradycyjnym rozumieniu (kod SMS lub kod generowany przez aplikację Google Authenticator), nawet jeśli Podesta miałby je włączone, wcale by nie pomogły. On po prostu przepisałby wyświetlające mu się na ekranie telefonu cyfry do odpowiedniego pola na fałszywej stronie. Jedynym ratunkiem na tak naiwnych użytkowników jest wykorzystanie U2F, czyli Universal 2nd Factor Authentication, które od wielu miesięcy zachwalamy uczestnikom naszych szkoleń i konferencyjnych prelekcjach. Dlatego już dziś kup klucz U2F i skonfiguruj go z popularnymi serwisami internetowymi. Masz GMaila, GitHuba, Dropbox, LastPassa/Keypassa? Skonfiguruj U2F Na czym to polega? Kupujecie (tani, kilka–kilkadziesiąt dolarów) token, który w prosty sposób kojarzycie z kontem Google w ustawieniach konta Google. Albo z Dropboxem, czy GitHubem albo innymi serwisami, które wspierają U2F. Klucz, podczas logowania do serwisu, dzięki API przeglądarki: 1. weryfikuje URL serwisu, 2. a po poprawnej weryfikacji, wykonuje “w sobie” na tzw. “bezpiecznym elemencie”, uwierzytelnienie dzięki kryptografii asymetrycznej Innymi słowy, klucz nie zadziała podczas próby logowania na fałszywej domenie, więc atakujący nie wyłudzą “drugiego składnika”, który poza posiadanym już hasłem jest im potrzebny do przejęcia konta. Jedyny minus na dzień dzisiejszy jest taki, że U2F wspiera tylko Google Chrome. Dla Firefoksa jeszcze nie ma natywnego wsparcia (bug 1065729), ale jest rozszerzenie stworzone przez naszego rodaka. Bonusem z zakupu silniejszej (i niestety trochę droższej) wersji klucza U2F marki Yubikey jest to, że można go wykorzystać do przechowywania w bezpieczny sposób kluczy GPG, uwierzytelnienia OTP lub logowania do komputerów z systemami Windows, Linux albo Mac. Jako Niebezpiecznik uważamy, że klucze U2F to najlepsza ochrona przed phishingiem i udało nam się do tego przekonać kilku naszych klientów, którzy zakupili klucze dla swoich pracowników i aktywnie z nich korzystają w zewnętrznych i wewnętrznych usługach. Tu warto nadmienić, że jeden z dostawców kluczy U2F, Yubico, udostępnia sporo API i dokumentacji dla deweloperów, jako Open Source. Dzięki temu możecie błyskawicznie wbudować w swoje oprogramowanie/serwisy internetowe funkcję uwierzytelniania przez U2F — prosto i za darmo. Jeśli do U2F nie przekonuje Was nasza opinia, to rzućcie okiem na to jak klucze U2F wdrożono dla wszystkich pracowników w takich małych firemkach jak Facebook czy Google ;-) Oto obowiązkowe dwie prelekcje pokazujące jak wyglądało wdrożenie U2F w Facebooku (wykorzystują go nawet podczas logowania do serwerów po SSH/SFTP!) oraz świetna praca naukowa, która pokazuje kulisy wdrożenia U2F w Google — dzięki wdrożeniu kluczy koszty z zarządzaniem kontami Googlersów obniżono tak bardzo, że ze zgromadzonych oszczędności dokupiono każdemu drugi klucza (do konta można podpiąć kilka klucz, gdyby jeden został zgubiony, zawsze będzie dostępny drugi — i warto nadmienić, że znalazca klucza nie odczyta z niego żadnych danych identyfikujących użytkownika czy skojarzone konta. Bo klucz takich danych nie przechowuje. Magia kryptografii asymetrycznej!). Czy Podesta to naiwniak? Zastanawiacie się pewnie, jaka jest skuteczność takich kampanii, które kierują użytkownika przez zły link, na fałszywą stronę, bez HTTPS (“zielonej kłódki”)? SecureWorks przeanalizowało 4,396 linków, jakie zostały przez Rosjan wysłane do 1,881 użytkowników Google pomiędzy marcem a wrześniem 2015. Więcej niż połowa (59%) z tych linków została odwiedzona, co sugeruje, że ofiary co najmniej przeszły na fałszywą stronę logowania. Nie jest możliwe stwierdzenie na tej podstawie, ile osób podało na fałszywej stronie swoje hasło i ile konto zostało dzięki temu przejętych. Niektóre z ofiar otrzymywały kolejne wiadomości mające na celu wyłudzenie haseł (można więc domniemywać, że nie nabrały się za pierwszym razem). 35% ofiar nie otrzymało kolejnych linków, co może sugerować do tylu kont udało się dostać lub atakujący nie próbowali drugi raz. Ale warto odnotować, że spośród tych, którzy otrzymali fałszywą wiadomość tylko raz, aż 60% kliknęło w linka. Spośród tych, którzy wiadomość otrzymali więcej niż raz, 57% osób otworzyło linka przy którejś z kolejnych prób. Przy takiej skali ataku zastanawiające jest, ile z prób logowania Rosjan na konta skutecznie zphishingowanych ofiar wykryły i zablokowały wewnętrzne systemy analizujące anomalie po stronie GMaila. Przecież na te konta ktoś, skądś (a zwłaszcza z innego niż zwykle IP) musiał się zalogować i pobrać, przejrzeć, wyszukać pod kątem konkretnych słów kluczowych całą pocztę. Wydaje się, że procedura ekstrakcji danych jest schematyczna i może być dobrym wskaźnikiem, że na koncie coś jest nie tak. Ciekawe czy Google i inni dostawcy poczty zwracają na takie zachowanie uwagę. Wniosek: socjotechnika najskuteczniejsza Statystyka z kampanii jaką Rosjanie przeprowadzili przy użyciu bit.ly na konta Google jest zbieżna z naszymi wewnętrznymi statystykami — success rate na poziomie 60%. Niebezpiecznik od ponad 4 lat wykonuje symulacje ataków socjotechnicznych na polskie firmy, korzystając nie tylko ze spearphishingu, ale również infekcji “niezłośliwym” złośliwym oprogramowaniem, aby móc uzyskać dostęp do sieci wewnętrznej atakowanej firmy. Patrząc na to, jak podobne ataki przeprowadzają rosyjskie agencje rządowe, nie mamy się czego wstydzić. Nasza infrastruktura (preteksty e-maili, domeny wykorzystywane do budowy linków, serwery obsługujące atak) jest bardziej zaawansowana i dopracowana niż to, z czego korzystali Rosjanie do ataków na sztab Hillary Clinton. Na kilku konferencjach w 2016 roku pokazywałem przykłady takich ataków w oparciu o faktyczne, choć ocenzurowane z danych osobowych, e-maile. Kto był, ten wie, do czego jesteśmy zdolni i jak łatwo przekuć nawet nie-do-końca udany atak na pełen sukces ;) Gdyby ktoś z Was chciał przetestować swoich pracowników na — jak widać najprostsze i szalenie skuteczne — ataki socjotechniczne z wykorzystaniem e-maila, telefonu lub kontaktu bezpośredniego (wizyty w firmie), zapraszamy do kontaktu, z przyjemnością Was zaatakujemy :-) ,Piotr Konieczny7 października na WikiLeaks pojawiła się zawartość prywatnej skrzynki GMail należącej do Johna Podesty, szefa kampanii prezydenckiej Hillary Clinton. Eksperci już wcześniej podejrzewali, że za atakami stali Rosjanie. Na podstawie ujawnionych e-maili można dokładnie odtworzyć, jak rosyjscy włamywacze pozyskali zawartość skrzynki Podesty. I jest to jeden z niewielu ataków obcego wywiadu na wysoko postawionego polityka, który został tak szczegółowo opisany na forum publicznym. Przyjrzymy się więc, z jakich to “tajnych” tricków korzystają Ci, którzy hackują na rzecz rosyjskich instytucji rządowych FSB lub GRU i zastanówmy się co Podesta, lub jakikolwiek inny użytkownik GMaila, może zrobić, aby nie dać się rządowym “hackerom”. Spear phishing – klucz do skrzynek pocztowych Dzięki dumpowi na WikiLeaks wiemy, że w marcu 2016 roku, Podesta na swoją prywatną skrzynkę na GMailu otrzymuje następującą wiadomość: Wiadomość, choć podszywa się pod Google, najwyraźniej nie wpadła do spamu. Nawet pomimo tego, że link prowadzący do zmiany hasła odwoływał się do tego URL-a: hxxps://bit.ly/1PibSU0 A więc każdy rozsądnie myślący człowiek, od razu zauważyłby, że jest to wiadomość fałszywa. Google korzystające ze skracacza URL? I to jeszcze nie swojego? John Podesta, a dokładniej, jedna z jego asystentek (która miała dostęp do prywatnej skrzynki Podesty, gdyż intensywnie korzystał on z gmaila do załatwiania służbowych spraw), też miała podejrzenia i dlatego przesłała tę wiadomość do sztabowego informatyka (Charles Delavan). A ten potwierdził, że e-mail jest prawdziwy (sic!) i kazał Podeście zmienić hasło. Później Delavan tłumaczył się, że odpisując Podeście, zrobił literówkę — chciał napisać illegitimate (nieprawdziwy), a napisał legitimate (prawdziwy). Niestety, Podesta po radzie Delevana, w link kliknął (a dokładnie, 2 razy kliknął): Jak widać, docelowym adresem jest strona: hxxp://myaccount.google.com-securitysettingpage.tk/security/signinoptions/password?e=am9obi5wb2Rlc3RhQGdtYWlsLmNvbQ%3D%3D&fn=Sm9obiBQb2Rlc3Rh &n=Sm9obg%3D%3D&img=Ly9saDQuZ29vZ2xldXNlcmNvbnRlbnQuY29tLy1RZVlPbH JkVGp2WS9BQUFBQUFBQUFBSS9BQUFBQUFBQUFCTS9CQldVOVQ0bUZUWS9waG90by 5qcGc%3D&id=1sutlodlwe Po przejściu na ten adres, każdemu powinny się od razu zapalić 2 ostrzegawcze lampki. Pierwsza, bo brakuje https (czyli “kłódki”), a druga, bo strona do zmiany hasła Google jest hostowana w domenie .tk. Tu ciekawostka. Te “krzaki” w URL-u nie są przypadkowe. Jest to zakodowany w Base64 adres e-mail Podesty. Dlaczego to jest ciekawe? Ponieważ sugeruje, że Podesta nie był jedynym celem atakujących. Kiedy atakuje się wąską grupę ofiar, przygotowuje się dedykowane, statyczne, dopasowane pod ofiary strony. Jest to szybsze i pewniejsze, niż tworzenie mechanizmu automatyzacji ataku, jaki tu widzimy, a który poprzez parametry w URL przekazuje silnikowi strony jaki adres e-mial i obrazek (avatar) ofiary podstawić na fałszywej stronie logowania. Automatyzacja ataku sugeruje dużą skalę No ale skoro taki mechanizm automatyzacji został zastosowany, to należy zadać pytanie, ile ofiar jednocześnie targetowali Rosjanie i kim te ofiary były (w końcu w linkach zakodowane są ich adresy e-mail, więc można do tego dojść)? Na to pytanie odpowie nam bit.ly, z którego zapewne dla wygody (API do generowania linków) skorzystali atakujący. W trakcie (i tuż po ataku), konto jakie zostało wykorzystane do wygenerowania linka nie było ustawione jako “prywatne”. Dzięki temu można było przejrzeć wszystkie stworzone przez atakujących linki. Zrobił to zespół SecureWorks, który wskazał, że za atakiem stoi grupa określana przez badaczy następującymi nazwami APT28, Sofacy, Sednit, Fancy Bear, Pawn Storm. W raporcie SecureWorks czytamy: Jest też bardzo ciekawe rozbicie ofiar na kategorie: Mam GMaila, jak Podesta — co robić, jak żyć? Nie korzystaj z prywatnego konta do załatwiania spraw służbowych. Ale przede wszystkim, nie korzystaj z tego samego hasła co do prywatnej skrzynki, także do innych kont, zwłaszcza służbowych. Rosjanie właśnie z tego powodu atakują prywatne/darmowe skrzynki swoich “celów” na publicznych, popularnych serwerach pocztowych. Raz, że co do zasady, monitoring tego typu incydentów nie jest tak ścisły jak w infrastrukturze firmy (w wojsku, u kontraktorów wojskowych, instytucjach rządowych, etc.). W “pracy”, ofiara po otrzymaniu e-maila o podejrzanej aktywności na swoim koncie, może zapytać firmowego administratora, czy to prawda. W przypadku gdy taki e-mail otrzyma na GMailu — powodzenia w znalezieniu telefonu do “helpdesku”. Dwa, że ludzie korzystają z tych samych haseł (lub bardzo podobnych) w różnych miejscach. Mając hasło do prywatnej skrzynki, sprawdza się, czy firmowy CRM/VPN/Webmail przypadkiem nie ma podobnego hasła. Podczas wykonywanych przez zespół Niebezpiecznika symulacji ataków na polskie i zagraniczne firmy, tzw. “reuse haseł” jest jednym z najczęstszych powodów, który wykorzystujemy do eskalacji ataku na inne firmowe zasoby ofiary. Niektórzy sugerują, że Podesta nie zostałby “zhackowany”, gdyby miał włączone dwuskładnikowe uwierzytelnienie. Moim zdaniem nie jest to prawda. Warto zauważyć, że dwuskładnikowe uwierzytelnianie, w tradycyjnym rozumieniu (kod SMS lub kod generowany przez aplikację Google Authenticator), nawet jeśli Podesta miałby je włączone, wcale by nie pomogły. On po prostu przepisałby wyświetlające mu się na ekranie telefonu cyfry do odpowiedniego pola na fałszywej stronie. Jedynym ratunkiem na tak naiwnych użytkowników jest wykorzystanie U2F, czyli Universal 2nd Factor Authentication, które od wielu miesięcy zachwalamy uczestnikom naszych szkoleń i konferencyjnych prelekcjach. Dlatego już dziś kup klucz U2F i skonfiguruj go z popularnymi serwisami internetowymi. Masz GMaila, GitHuba, Dropbox, LastPassa/Keypassa? Skonfiguruj U2F Na czym to polega? Kupujecie (tani, kilka–kilkadziesiąt dolarów) token, który w prosty sposób kojarzycie z kontem Google w ustawieniach konta Google. Albo z Dropboxem, czy GitHubem albo innymi serwisami, które wspierają U2F. Klucz, podczas logowania do serwisu, dzięki API przeglądarki: 1. weryfikuje URL serwisu, 2. a po poprawnej weryfikacji, wykonuje “w sobie” na tzw. “bezpiecznym elemencie”, uwierzytelnienie dzięki kryptografii asymetrycznej Innymi słowy, klucz nie zadziała podczas próby logowania na fałszywej domenie, więc atakujący nie wyłudzą “drugiego składnika”, który poza posiadanym już hasłem jest im potrzebny do przejęcia konta. Jedyny minus na dzień dzisiejszy jest taki, że U2F wspiera tylko Google Chrome. Dla Firefoksa jeszcze nie ma natywnego wsparcia (bug 1065729), ale jest rozszerzenie stworzone przez naszego rodaka. Bonusem z zakupu silniejszej (i niestety trochę droższej) wersji klucza U2F marki Yubikey jest to, że można go wykorzystać do przechowywania w bezpieczny sposób kluczy GPG, uwierzytelnienia OTP lub logowania do komputerów z systemami Windows, Linux albo Mac. Jako Niebezpiecznik uważamy, że klucze U2F to najlepsza ochrona przed phishingiem i udało nam się do tego przekonać kilku naszych klientów, którzy zakupili klucze dla swoich pracowników i aktywnie z nich korzystają w zewnętrznych i wewnętrznych usługach. Tu warto nadmienić, że jeden z dostawców kluczy U2F, Yubico, udostępnia sporo API i dokumentacji dla deweloperów, jako Open Source. Dzięki temu możecie błyskawicznie wbudować w swoje oprogramowanie/serwisy internetowe funkcję uwierzytelniania przez U2F — prosto i za darmo. Jeśli do U2F nie przekonuje Was nasza opinia, to rzućcie okiem na to jak klucze U2F wdrożono dla wszystkich pracowników w takich małych firemkach jak Facebook czy Google ;-) Oto obowiązkowe dwie prelekcje pokazujące jak wyglądało wdrożenie U2F w Facebooku (wykorzystują go nawet podczas logowania do serwerów po SSH/SFTP!) oraz świetna praca naukowa, która pokazuje kulisy wdrożenia U2F w Google — dzięki wdrożeniu kluczy koszty z zarządzaniem kontami Googlersów obniżono tak bardzo, że ze zgromadzonych oszczędności dokupiono każdemu drugi klucza (do konta można podpiąć kilka klucz, gdyby jeden został zgubiony, zawsze będzie dostępny drugi — i warto nadmienić, że znalazca klucza nie odczyta z niego żadnych danych identyfikujących użytkownika czy skojarzone konta. Bo klucz takich danych nie przechowuje. Magia kryptografii asymetrycznej!). Czy Podesta to naiwniak? Zastanawiacie się pewnie, jaka jest skuteczność takich kampanii, które kierują użytkownika przez zły link, na fałszywą stronę, bez HTTPS (“zielonej kłódki”)? SecureWorks przeanalizowało 4,396 linków, jakie zostały przez Rosjan wysłane do 1,881 użytkowników Google pomiędzy marcem a wrześniem 2015. Więcej niż połowa (59%) z tych linków została odwiedzona, co sugeruje, że ofiary co najmniej przeszły na fałszywą stronę logowania. Nie jest możliwe stwierdzenie na tej podstawie, ile osób podało na fałszywej stronie swoje hasło i ile konto zostało dzięki temu przejętych. Niektóre z ofiar otrzymywały kolejne wiadomości mające na celu wyłudzenie haseł (można więc domniemywać, że nie nabrały się za pierwszym razem). 35% ofiar nie otrzymało kolejnych linków, co może sugerować do tylu kont udało się dostać lub atakujący nie próbowali drugi raz. Ale warto odnotować, że spośród tych, którzy otrzymali fałszywą wiadomość tylko raz, aż 60% kliknęło w linka. Spośród tych, którzy wiadomość otrzymali więcej niż raz, 57% osób otworzyło linka przy którejś z kolejnych prób. Przy takiej skali ataku zastanawiające jest, ile z prób logowania Rosjan na konta skutecznie zphishingowanych ofiar wykryły i zablokowały wewnętrzne systemy analizujące anomalie po stronie GMaila. Przecież na te konta ktoś, skądś (a zwłaszcza z innego niż zwykle IP) musiał się zalogować i pobrać, przejrzeć, wyszukać pod kątem konkretnych słów kluczowych całą pocztę. Wydaje się, że procedura ekstrakcji danych jest schematyczna i może być dobrym wskaźnikiem, że na koncie coś jest nie tak. Ciekawe czy Google i inni dostawcy poczty zwracają na takie zachowanie uwagę. Wniosek: socjotechnika najskuteczniejsza Statystyka z kampanii jaką Rosjanie przeprowadzili przy użyciu bit.ly na konta Google jest zbieżna z naszymi wewnętrznymi statystykami — success rate na poziomie 60%. Niebezpiecznik od ponad 4 lat wykonuje symulacje ataków socjotechnicznych na polskie firmy, korzystając nie tylko ze spearphishingu, ale również infekcji “niezłośliwym” złośliwym oprogramowaniem, aby móc uzyskać dostęp do sieci wewnętrznej atakowanej firmy. Patrząc na to, jak podobne ataki przeprowadzają rosyjskie agencje rządowe, nie mamy się czego wstydzić. Nasza infrastruktura (preteksty e-maili, domeny wykorzystywane do budowy linków, serwery obsługujące atak) jest bardziej zaawansowana i dopracowana niż to, z czego korzystali Rosjanie do ataków na sztab Hillary Clinton. Na kilku konferencjach w 2016 roku pokazywałem przykłady takich ataków w oparciu o faktyczne, choć ocenzurowane z danych osobowych, e-maile. Kto był, ten wie, do czego jesteśmy zdolni i jak łatwo przekuć nawet nie-do-końca udany atak na pełen sukces ;) Gdyby ktoś z Was chciał przetestować swoich pracowników na — jak widać najprostsze i szalenie skuteczne — ataki socjotechniczne z wykorzystaniem e-maila, telefonu lub kontaktu bezpośredniego (wizyty w firmie), zapraszamy do kontaktu, z przyjemnością Was zaatakujemy :-) ,Piotr Konieczny