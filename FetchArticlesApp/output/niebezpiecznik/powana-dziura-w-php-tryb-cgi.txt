Sposób w jaki CGI i PHP komunikują się między sobą umożliwia atakującemu na zdalne uruchomienie kodu na web serwerze. Exploity na tę podatność są już publicznie dostępne. Błąd istniał od 8 lat… Dziura w PHP i CGI Podatność wnika z tego, że interpreter PHP nie do końca dokładnie podąża za wytycznymi standardu CGI i czasem parametry URL mogą zostać przekazane do interpretara PHP i zinterpretowane jako argumenty linii poleceń. W internecie dostępne są już exploity, które przy pomocy tej podatności otwierają atakującemu shella na webserwerze… Warto odnotować, że powyższa dziura dotyczy serwerów z PHP pracujących w trybie CGI, instalacje FastCGI PHP nie są podatne na ten atak. Czy twój serwer PHP jest dziurawy? Aby sprawdzić, czy twoja konfiguracja webserwera jest podatna na ten atak dołącz parametr “?-s” do dowolnego URL-a. Jeśli zobaczysz kod źródłowy PHP, jak najszybciej zabezpiecz swój serwer, korzystając z rad poniżej. Jak zabezpieczyć swój serwer PHP? Dostępne są także patche do PHP (do wersji 5.3.12 i 5.4.2) ale nie usuwają one w pełni tego błędu. Najlepszą ochroną pozostaje więc odpowiednie ustawienie odpowiednich reguł filtrujących na web serverze — ale uwaga, nie tych z PHP.net, bo one również nie w pełni zabezpieczają nas przed skutkami tej dziury. Najlepiej podążyć za tymi wskazówkami: RewriteEngine on RewriteCond %{QUERY_STRING} ^[^=]*$ RewriteCond %{QUERY_STRING} %2d|\- [NC] RewriteRule .? - [F,L] Jeśli samodzielne łatanie Cię przerasta, albo chcesz się upewnić, że twoja webaplikacja nie ma żadnych innych błędów bezpieczeństwa, możesz nas wynająć do wykonania testów bezpieczeństwa. PS. Warto także zauważyć, że tego typu błędy (de facto mieliśmy przez chwilę do czynienia z 0day’em) należy zgłaszać developerom, a nie pisać o nich publicznie. Odkrywcy błędu tak też postąpili, ale opis podatności wyciekł poprzez bazę błędów PHP i został nagłośniony na serwisie Reddit… ,Piotr Konieczny