Dziś ok. 19:30 przez kilka minut wchodząc na Niebezpiecznika niektórzy z was mogli, chwilę po załadowaniu się naszej strony, zostać przekierowani na Pastebina. Nieznani sprawcy (których mimo wszystko pozdrawiamy ;) wstrzykneli do skryptu znajdującego się na zewnętrznym (nie naszym) serwerze instrukcję przekierowania — zadziałała, bo odwołujemy się do tego pliku, aby pokazywać reklamy. Co dokładnie się stało? Dyskusyjny plik (celowo nie podajemy jego nazwy, czekamy aż prawdziwa ofiara ataku załata dziurę) includujemyzałączamy i whitelistujemydopuszczamy w naszej polityce CSP. Kiedy na ostatnim spotkaniu OWASP w Krakowie opowiadałem o CSP i tym jak pomaga ono w ochronie przed XSS-ami, wspomniałem o tym, że i CSP da się “zhackować” — o ile atakujący dostanie się na zawhitelistowany serwer, z którego załączamy jakieś zasoby w kontekście naszej strony. I dokładnie to stało się dziś — nikt nie przełamał zabezpieczeń Niebezpiecznika, ale włamał się na serwery jednej z zewnętrznych firm do której to (nie tylko my, ale również inni internauci) odwołujemy się poprzez załączenie skryptu (aczkolwiek nie zauważyliśmy, żeby atakujący próbowali przekierować inne domeny niż nasza — czy to znaczy, że możemy się czuć wyróżnieni albo zacząć używać modnego ostatnio zwrotu “atak skierowany”? :) Schlebia nam to, że ktoś docenia nas tak bardzo, że aby przekierować część internautów z naszej strony na inna, włamuje się do innych serwerów — raz, bo mu się chce atakować tak mało istotne cele jak my; dwa, bo to pokazuje, że z nami nie może sobie poradzić — chociaż nie wątpimy, że kiedyś komuś się uda, co powtarzamy od dawna :) Prawie każda strona może zostać “porwana” w ten sposób… Warto podkreślić, że “ofiarami” takiego tricku stać może się każdy, jeśli tylko korzysta z zewnętrznych skryptów, np. popularnych Google AdSense lub Google Analytics — o ile ktoś włamie się na serwery Google i dopisze do tych plików jedną, złośliwą linijkę. Aby sprawdzić do jakich zewnętrznych zasobów odnosi się Twoja strona (i konsekwencji, kto może wstrzyknąć ci “złosliwy” skrypt można w przeglądarce Firefox włączyć Firebuga i przejść do zakładki “Net”. Poniżej wynik dla mBanku. Jak widać, żeby przekierować stronę mBanku, nie trzeba się do niego włamywać, a “wystarczy” przejąć serwery Gemiusa, Facebooka albo Google. Ochrona? Nie ufać nikomu, czyli nie linkować do niczego poza swój własny serwer — ale czy jakikolwiek serwis internetowy będzie w stanie tak funkcjonować (bez “like button” Facebooka to przecież dzisiaj niemożliwe! ;) Większość pewnie nie, dlatego my linkowaliśmy i dalej będziemy linkować “na zewnątrz”, bo ryzyko jakie z tego faktu płynie jest dla nas akceptowalne; ewentualny, chwilowy redirect w przypadku “zhackowania” zewnętrznego serwera nie niesie żadnych zagrożeń dla naszego serwera ani danych, które się na nim znajdują (zresztą my i tak nie trzymamy na naszym webserwerze niczego poufnego lub materiałów za które mielibyśmy sie wstydzić). Ale oprócz właścicieli strony, tego typu wstrzyknięcie dotyka także jej użytkowników (można próbować przekierować ich na stronę ze złośliwym oprogramowaniem, albo wyświetlić fałszywe okno logowania — u nas nie ma się gdzie logować, ale można było, jak niektórzy zauważają, próbować przechwytywać naciśnięcie przycisku like i podstawiać fałszywy formularz logowania do Facebooka, licząc na to, że użytkownicy nie zorientują się iż nie wyskoczyło okienko odwołujące się do prawdziwego adresu Facebooka. Jak się chronić przed takim zachowaniem od strony użytkownika? Używając dodatków typu NoScript. Na niebezpiecznikowych stronach z fomularzami np. kontaktowym zewnętrzne skrypty spoza naszej domeny nie były ładowane, więc atakujący aby przechwycić zawartość formularza musiałby np. przekierować Was na swoją domenę, dlatego oprócz korzystania z NoScripta warto patrzeć na URL, kiedy używa się formularzy do logowania lub wprowadzania danych i rozważyć szyfrowanie tych danych — zawsze zachęcamy w kontaktach z nami do przesyłania informacji zaszyfrowanych przez GPG. Podsumowujac, usunęliśmy linkowanie do zewnętrznych skryptów z domeny w której znajdował się błąd. Jeśli ktoś nie chce lub nie może podjąć aż tak drastycznych kroków na swojej stronie, może rozważyć użycie parametru sandbox który dotyczy osadzanych ramek, dlatego nie zawsze jest to możliwe/pomocne zabezpieczenie. Aha, my zostawiliśmy jednak includy z serwerów Google — napastniku, podnosimy poprzeczkę i życzymy powodzenia ;-) Już raz można było podmienić naszą stronę Dodajmy, że stronę Niebezpiecznika już raz można było podmienić — znów jednak nie na skutek błędu na naszym serwerze, a w wyniku słabości zabezpieczeń Cloudflare’a i Google. Można dowcipnie powiedzieć, że dołączyliśmy do grona najlepszych ;) Bo “zhackowane” były już tak znane marki jak Google, Apple, Microsoft, Twitter, Apple, Facebook, Cloudflare, Bit9, RSA, Kaspersky, MON i wiele, wiele innych firm z branży security (niektórych spotkało to wielokrotnie) — z tym, że wyżej wymienionym firmom wykradziono dane albo zrootowano serwery — nam na razie nie (ale nie wątpimy, że kiedyś i taki dzień nastąpi — wtedy w post mortem dodatkowo uderzymy się w pierś i wkleimy obrazek smutnej pandy. Albo dwa.). A póki co, żeby złe przekuwać na dobre, udostępniamy wspomnianą wcześniej prezentację dotyczącą CSP, zachęcając do jej implementacji — dzięki czemu siłą rzeczy będiecie musieli sprawdzić, dokąd linkuje Wasza strona i od kogo zależy czy da się na nią wstrzyknąć skrypt przekierowujący na inną domenę :-) Na koniec podkreślmy jeszcze raz, że atakujący nie znaleźli żadnej podatności na jakichkolwiek kontrolowanych przez nas serwerach, nie był to 0day na WordPressa, ani nawet atak socjotechniczny na Cloudflare (z usług której to firmy korzystamy do obsługi DNS), a podatność w skrypcie reklamowym zewnętrznej firmy i włamanie na jej, nie nasze serwery. Fakt, nie powinniśmy ufać, że są tak samo bezpieczni jak my. ,Piotr Konieczny