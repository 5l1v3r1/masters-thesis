O typosquattingu, czyli rejestrowaniu domen odpowiadającyh literówkom popełnianym w trakcie wpisywania domeny w pasku adresowym przeglądarki pisaliśmy już kilka razy. Ale błąd w rozwiązaniu nazwy domenowej może się pojawić także nie na skutek błędu człowieka, a promieni kosmicznych. Bitsquatting Bitsquatting polega na rejestracji domeny o jeden bit innej niż oryginalna i oczekiwaniu na małopopularne (ale wciąż mające niekiedy miejsce) zdarzenie zmiany bitu wywołanej z powodu przegrzania układu pamięci lub uderzenia cząstek wchodzących w skład promieniowania kosmicznego. Niektóre statystyki mówią, że można się spodziewać jednego takiego błędu dziennie na każde 4GB pamięci. Artem Dinaburg przedstawił jako przykład domenę CNN.com. 01100011 01101110 01101110 0101110 01100011 01101111 01101101 c n n . c o m Po kliknięciu na link cnn.com, zapis binarny tej domeny jest kopiowany w pamięci kilka razy: poprzez stos TCP/IP z kernel do user mode. przez przeglądarkę w trakcie parsowania HTML w trakcie tworzenia reprezentacji DOM w trakcie tworzenia żądania HTTP poprzez API w trakcie rozwiązywania DNS Załóżmy więc, że następuje przypadkowa modyfikacja bitu w nazwie domeny (jak poniżej) i zamiast cnn.com, przeglądarka trafia na con.com. 01100011 01101111 01101110 0101110 01100011 01101111 01101101 c o n . c o m Żeby zmaksymalizować szansę ataku, warto obrać sobie za cel zbitsquattingowanie domeny, która jest jedną z najczęściej rozwiązywanych w internecie. Okazuje się jednak, że tego typu domeny nie należą do popularnych serwisów a do sieci serwerów CDN, hostujących statyczne zasoby, np. fbcdn.net, 2mdn.net i akamai.com Eksperyment bitsuqttingowy Artem zarejestrował 32 domeny, różniące się o jeden bit od następujących oryginałów: akamai.net, amazon.com, microsoft.com, live.com, 2mdn.net, fbcdn.net, root-servers.net, doubleclick.net i zaczął monitorować logi serwerów HTTP, w oczekiwaniu na błędne, wynikające z przeskoczenia bitu, połączenia. Ku jego zdumieniu, na swoich domenach odnotował ruch! Od października 2010 do maja 2011 odnotował łącznie 52,317 żądań z 12,949 unikalnych adresów IP (żądania z wyszukiwarek i skanerów zostały odfiltrowane). Oto jeden z przykładów: static.ak.fjcdn.net 109.242.50.xxx “GET /rsrc.php/z67NS/hash/4ys0envq.js HTTP/1.1” “http://www.facebook.com/profile.php?id=xxxxxxxxxx” “Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.0; WOW64; Trident/4.0; GTB6.5; SLCC1; .NET CLR 2.0.50727; Media Center PC 5.0; .NET CLR 3.0.30729; .NET CLR 3.5.30729; InfoPath.2; Hotbar 11.0.78.0; OfficeLiveConnector.1.5; OfficeLivePatch.1.3; AskTbZTV/5.8.0.12304)” Co ciekawe, analiza User-Agents wykazała, że bardziej narażeni na bisquatting są użytkownicy smartphonów i konsol do gier, a najmniej użytkownicy systemu operacyjnego Mac OS X: Jeśli ktoś chce powtórzyć eksperyment, Artem opublikował skrypt pythona do generowania bitsquattingowych domen. Użytkownicy Reddit z kolei sugerują, aby za cel obrać sobie CDN Google wykorzystywany do serwowania reklam (tj. źródło JavaScriptu, które jest załączone praktycznie na każdej stronie WWW w internecie). W sieci znaleźć można także whitepaper i prezentację Artema poświęconą bitsquattingowi oraz jego wykład na DEFCON 19: Pozostaje więc włączyć ECC w RAM. Przypadkowy “bit flapping” w innych atakach Warto wspomnieć, że “przeskoczenie bitu” wywołane promieniami kosmicznymi było już rozpatrywane przez naukowców m.in. w kontekście ataków na wirtualne maszyny, a w samym kernelu Linuksa znajduje się patch mający na celu usuwać skutki błędów wywołanych promieniami kosmicznymi. Metoda zmiany wartości “losowo” wybranego bitu (tym razem celowo, a nie przypadkowo) to także jedna z technik fuzzingu. Między innymi dzięki niej, dwójka polskich badaczy wygenerowała ostatnio kilkadziesiąt błędów w oprogramowaniu Adobe Acrobat Reader. ,Piotr Konieczny