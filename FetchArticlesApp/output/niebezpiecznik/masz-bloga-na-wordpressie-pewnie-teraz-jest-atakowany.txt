Od kilku dni blogi postawione na WordPressie są celem ataków polegających na zgadywaniu haseł — atakujący dysponują botnetem składającym się z 90 000 hostów. Wzrosła liczba ataków zgadywania haseł O atakach poinformowały m.in. firma hostingowa Hostgator, a także CloudFlare, który sprytnie wykorzystuje ten atak do promocji swojego chmurowego WAF-a: Ale niestety, te ataki to nie wymysł marketingowców z Cloudflare’a — są prawdziwe — co potwierdzają statystyki firmy Sucuri za ostatnie miesiące: Luty: 1,034,323 prób zgadywania haseł (36k dziennie) Marzec: 950,389 prób zgadywania haseł (31k dziennie) Kwiecień: 774,104 prób zgadywania haseł (77,410 dziennie) Wszystkie te firmy mylnie nazywają ataki “brute-forcem”, kiedy wszystko wskazuje na to, że botnet korzysta raczej ze słownika… Sucuri publikuje także listę wykorzystywanych w atakach loginów i haseł: loginy admin test administrator Admin root hasła 16,798 [pwd] => admin 10,880 [pwd] => 123456 9,727 [pwd] => 666666 9,106 [pwd] => 111111 7,882 [pwd] => 12345678 7,717 [pwd] => qwerty 7,295 [pwd] => 1234567 6,160 [pwd] => #@F#GBH$R^JNEBSRVWRVW 5,640 [pwd] => password 5,446 [pwd] => 12345 5,392 [pwd] => $#GBERBSTGBR%GSERHBSR 5,058 [pwd] => %G#GBAEGBW%HBFGBFXGB 5,024 [pwd] => RGA%BT%HBSERGAEEAHAEH 4,861 [pwd] => aethAEHBAEGBAEGEE% 4,317 [pwd] => 123 4,281 [pwd] => 123qwe 4,133 [pwd] => 123admin 4,092 [pwd] => 12345qwe 4,086 [pwd] => 12369874 3,880 [pwd] => 123123 3,831 [pwd] => 1234qwer 3,814 [pwd] => 1234abcd 3,787 [pwd] => 123654 3,751 [pwd] => 123qwe123qwe 3,744 [pwd] => 123abc 3,623 [pwd] => 123qweasd 3,606 [pwd] => 123abc123 3,422 [pwd] => 12345qwert Upewnijccie się, że nie używacie żadnego z powyższych! Oczywiście obecnie największa tajemnicą jest obecność tych skomplikowanych haseł w słownikach atakujących oraz powód włamywania się na WordPressy; czy chodzi o przejęcie serwerów, które dysponują dużym uploadem, aby wykorzystać je w atakach DDoS? Jak zabezpieczyć WordPressa? Przed skutkami ataków zgadywania haseł najlepiej zabezpieczyć się ustawiając trudny do przewidzenia login i niesłownikowe, unikatowe (niewykorzystywane w żadnym innym miejscu) hasło. O ile silne hasło zabezpieczy nas przed przejęciem kontroli nad naszym blogiem, to wcale nie oznacza, że atakujący przestanie wysyłać w naszą stronę zautomatyzowane zapytania, które obciążają serwer i spowalniają działanie bloga — na to rada jest jedna — wykrywać błędne próby logowania i banować intruzów. Efekt ten można osiągnąć na kilka sposobów… Najgorszym (a niestety najczęściej polecanym) jest wgranie odpowiedniego pluginu do WordPressa (np. Better WP Security, Limit Login Attempts). Należy mieć świadomość, że wtyczki te nie uchronią nas przed atakiem bo pochodzi on z wielu adresów IP! Natomiast prawie na pewno, dzięki instalacji tych wtyczek zwiększymy powierzchnię ataku (ew. dziury w kodzie dodatkowej wtyczki), oraz spowolnimy działanie naszego bloga (PHP nie jest zbyt efektywne w bronieniu się przed atakami na PHP ;) Dlatego można rozważyć dostęp do panelu logowania tylko dla wybranego IP lub przeniesienie panelu logowania do WordPressa w inne miejsce, przy czym warto wtedy na starą lokalizację założyć dodatkową warstwę ochrony-pułapkę w postaci uwierzytelniania BasicAuth (popularnie zwanego .htaccess) — ale uwaga, nie wystarczy wrzucić .htaccess do /wp-admin bo za logowanie de facto odpowiada plik /wp-login.php! On też musi być objęty ochroną. Po wdrożeniu BasicAuth należy zliczać w logach nieudane próby logowania i banować intruzów np. przy pomocy pakietu fail2ban. Zawsze dobrym pomysłem w przypadku WordPressa jest przestrzeganie zaleceń dotyczących bezpieczeństwa pochodzących z oficjalnej strony WordPressa lub wdrożenie dwuskładnikowego uwierzytelnienia (użytkownicy blogów w domenie WordPress.com mogą je po prostu włączyć w ustawieniach, inni są skazani na wtyczkę np. DuoSecurity lub Google Authenticator). ,igH