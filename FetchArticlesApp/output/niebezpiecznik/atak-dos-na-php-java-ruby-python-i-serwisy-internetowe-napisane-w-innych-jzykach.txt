Odpowiednio spreparowane żądanie POST wysłane do webaplikacji powoduje 100% użycie procesora, które może trwać wiele godzin i czasowo zawiesić pracę serwisu internetowego. Atak na tablice hashujące Podatność na atak znajduje się w algorytmach tablic hashujących wykorzystywanych przez wiele języków skryptowych i ponieważ jest to tzw. design flaw, błąd nie zależy od architektury webaplikacji. Odkrywcami są Alexander Klink i Julian Waelde. Przedstawili swoje badania na kongresie 28C3: Na czym polega atak? W skrócie: atak wykorzystuje to, że dane otrzymywane przez GET/POST są składowane w tablicach hashujących. Atakujący musi spowodować zmapowanie przesyłanych parametrów do tej samej wartości hasha. Tego typu mapowanie jest mało wydajne, więc zajmuje dużo czasu i powoduje obniżenie wydajności. Dla przykładu, zaprezentowano wyliczenia dla Core i7 i PHP: 8 MB POST data – 288 min. czasu pracy CPU 500k POST data – 1 min. czasu pracy CPU 300k POST data – 30 sek. CPU Należy jednak wziąć pod uwagę, że konfiguracja PHP może limitować czas przetwarzania pojedynczego żądania (zazwyczaj 1 min). Dodatkowo, sam serwer może mieć ustawione limity na czas pracy procesora. Oto wersje podatne na atak: Java, wszystkie wersje JRuby <= 1.6.5 PHP <= 5.3.8, <= 5.4.0RC3 Python, wszystkie wersje Rubinius, wszystkie wersje Ruby <= 1.8.7-p356 Apache Geronimo, wszystkie wersje Apache Tomcat <= 5.5.34, <= 6.0.34, <= 7.0.22 Oracle Glassfish <= 3.1.1 Jetty, wszystkie wersje Plone, wszystkie wersje Rack, wszystkie wersje V8 JavaScript Engine, wszystkie wersje Jak się ochronić przed atakiem? Rozwiązaniem problemu jest użycie “randomized hash functions” — ale ich wdrożenie wymaga zmian w kodzie. Istnieją też obejścia. Dla PHP, ustawienie wartości max_input_vars ograniczającej liczbę parametrów w jednym żądaniu (PHP 5.4 0RC4) oraz max_input_time. Dla Tomcata podobnie. Dla Microsoft ASP.NET — obniżenie długości żądania HTTP: <configuration> <system.web> <httpRuntime maxRequestLength="200”/> </system.web> </configuration> Na marginesie, powyższa podatność nie jest niczym nowym. Już w 2003 opisano podobny atak, z tym, że na Perla. Przypomnijmy także, że całkiem niedawno opublikowano inny atak DoS na webaplikacje w PHP oraz Javie. Dodatkowo, warto zdawać sobie sprawę, że powyższe problemy mogą wystąpić nie tylko w webaplikacjach, ale w każdym miejscu, gdzie znajdują się struktury danych oparte o tablice hashujące. P.S. Jeśli chcesz się dowiedzieć czegoś więcej na temat atakowania i ochrony webaplikacji, to zapraszamy na nasze szkolenia — najbliższy termin 23-24 stycznia 2012 ma jeszcze kilka wolnych miejsc. ,vi.curry